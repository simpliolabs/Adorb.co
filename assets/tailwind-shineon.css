*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
}

.form-checkbox,.form-radio {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

.form-checkbox {
  border-radius: 0px;
}

.form-checkbox:focus,.form-radio:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

.form-checkbox:checked,.form-radio:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

.form-checkbox:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

.form-checkbox:checked:hover,.form-checkbox:checked:focus,.form-radio:checked:hover,.form-radio:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

.form-checkbox:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

.form-checkbox:indeterminate:hover,.form-checkbox:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

.tailwind .tw-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.tailwind .tw-pointer-events-none {
  pointer-events: none;
}

.tailwind .tw-invisible {
  visibility: hidden;
}

.tailwind .tw-absolute {
  position: absolute;
}

.tailwind .tw-relative {
  position: relative;
}

.tailwind .tw-inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.tailwind .tw--top-2\.5 {
  top: -0.625em;
}

.tailwind .tw--right-2\.5 {
  right: -0.625em;
}

.tailwind .tw--top-2 {
  top: -0.5em;
}

.tailwind .tw--right-2 {
  right: -0.5em;
}

.tailwind .tw-mt-6 {
  margin-top: 1.5em;
}

.tailwind .tw-mb-0 {
  margin-bottom: 0px;
}

.tailwind .tw-ml-3 {
  margin-left: 0.75em;
}

.tailwind .tw-mt-1 {
  margin-top: 0.25em;
}

.tailwind .tw-block {
  display: block;
}

.tailwind .tw-inline-block {
  display: inline-block;
}

.tailwind .tw-flex {
  display: flex;
}

.tailwind .tw-inline-flex {
  display: inline-flex;
}

.tailwind .tw-h-6 {
  height: 1.5em;
}

.tailwind .tw-h-16 {
  height: 4em;
}

.tailwind .tw-h-12 {
  height: 3em;
}

.tailwind .tw-h-5 {
  height: 1.25em;
}

.tailwind .tw-h-full {
  height: 100%;
}

.tailwind .tw-h-3 {
  height: 0.75em;
}

.tailwind .tw-w-6 {
  width: 1.5em;
}

.tailwind .tw-w-16 {
  width: 4em;
}

.tailwind .tw-w-12 {
  width: 3em;
}

.tailwind .tw-w-11 {
  width: 2.75em;
}

.tailwind .tw-w-5 {
  width: 1.25em;
}

.tailwind .tw-w-full {
  width: 100%;
}

.tailwind .tw-w-3 {
  width: 0.75em;
}

.tailwind .tw-flex-shrink-0 {
  flex-shrink: 0;
}

.tailwind .tw-translate-x-5 {
  --tw-translate-x: 1.25em;
  transform: var(--tw-transform);
}

.tailwind .tw-translate-x-0 {
  --tw-translate-x: 0px;
  transform: var(--tw-transform);
}

.tailwind .tw-transform {
  transform: var(--tw-transform);
}

.tailwind .tw-cursor-pointer {
  cursor: pointer;
}

.tailwind .tw-items-center {
  align-items: center;
}

.tailwind .tw-justify-center {
  justify-content: center;
}

.tailwind .tw-justify-between {
  justify-content: space-between;
}

.tailwind .tw-space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2em * var(--tw-space-x-reverse));
  margin-left: calc(2em * calc(1 - var(--tw-space-x-reverse)));
}

.tailwind .tw-divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.tailwind .tw-divide-\[\#c0cbd3\] > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgba(192, 203, 211, var(--tw-divide-opacity));
}

.tailwind .tw-divide-gray-300 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-divide-opacity));
}

.tailwind .tw-overflow-hidden {
  overflow: hidden;
}

.tailwind .tw-rounded-md {
  border-radius: 0.375em;
}

.tailwind .tw-rounded {
  border-radius: 0.25em;
}

.tailwind .tw-rounded-full {
  border-radius: 9999px;
}

.tailwind .tw-border {
  border-width: 1px;
}

.tailwind .tw-border-2 {
  border-width: 2px;
}

.tailwind .tw-border-solid {
  border-style: solid;
}

.tailwind .tw-border-\[\#c0cbd3\] {
  --tw-border-opacity: 1;
  border-color: rgba(192, 203, 211, var(--tw-border-opacity));
}

.tailwind .tw-border-gray-400 {
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, var(--tw-border-opacity));
}

.tailwind .tw-border-transparent {
  border-color: transparent;
}

.tailwind .tw-bg-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.tailwind .tw-bg-\[\#bac2d2\] {
  --tw-bg-opacity: 1;
  background-color: rgba(186, 194, 210, var(--tw-bg-opacity));
}

.tailwind .tw-bg-gray-800\/75 {
  background-color: rgba(31, 41, 55, 0.75);
}

.tailwind .tw-bg-\[\#84c793\] {
  --tw-bg-opacity: 1;
  background-color: rgba(132, 199, 147, var(--tw-bg-opacity));
}

.tailwind .tw-bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}

.tailwind .tw-object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.tailwind .tw-px-6 {
  padding-left: 1.5em;
  padding-right: 1.5em;
}

.tailwind .tw-py-3 {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
}

.tailwind .tw-py-4 {
  padding-top: 1em;
  padding-bottom: 1em;
}

.tailwind .tw-font-sans {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.tailwind .tw-text-sm {
  font-size: 0.875em;
  line-height: 1.25em;
}

.tailwind .tw-text-xs {
  font-size: 0.75em;
  line-height: 1em;
}

.tailwind .tw-font-bold {
  font-weight: 700;
}

.tailwind .tw-font-semibold {
  font-weight: 600;
}

.tailwind .tw-text-gray-700 {
  --tw-text-opacity: 1;
  color: rgba(55, 65, 81, var(--tw-text-opacity));
}

.tailwind .tw-text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.tailwind .tw-text-gray-400 {
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.tailwind .\!tw-text-gray-500 {
  --tw-text-opacity: 1 !important;
  color: rgba(107, 114, 128, var(--tw-text-opacity)) !important;
}

.tailwind .tw-text-\[\#84c793\] {
  --tw-text-opacity: 1;
  color: rgba(132, 199, 147, var(--tw-text-opacity));
}

.tailwind .tw-opacity-0 {
  opacity: 0;
}

.tailwind .tw-opacity-100 {
  opacity: 1;
}

.tailwind .tw-shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind .tw-shadow {
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tailwind .tw-ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.tailwind .tw-transition-colors {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.tailwind .tw-transition {
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.tailwind .tw-transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.tailwind .tw-duration-100 {
  transition-duration: 100ms;
}

.tailwind .tw-duration-200 {
  transition-duration: 200ms;
}

.tailwind .tw-ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.tailwind .tw-ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.tailwind .tw-ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/***** Tailwind resets *****/

.tailwind {
  font-size: 16px;
  /*! tailwindcss v2.2.16 | MIT License | https://tailwindcss.com */
}

/**
  Use a better box model (opinionated).
  */

.tailwind *,
  .tailwind ::before,
  .tailwind ::after {
  box-sizing: border-box;
}

/**
  Use a more readable tab size (opinionated).
  */

.tailwind html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
  1. Correct the line height in all browsers.
  2. Prevent adjustments of font size after orientation changes in iOS.
  */

.tailwind html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
  Remove the margin in all browsers.
  */

.tailwind body {
  margin: 0;
}

/**
  Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
  */

.tailwind body {
  font-family:
            system-ui,
            -apple-system, /* Firefox supports this but not yet `system-ui` */
            'Segoe UI',
            Roboto,
            Helvetica,
            Arial,
            sans-serif,
            'Apple Color Emoji',
            'Segoe UI Emoji';
}

/**
  1. Add the correct height in Firefox.
  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
  */

.tailwind hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/**
  Add the correct text decoration in Chrome, Edge, and Safari.
  */

.tailwind abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/**
  Add the correct font weight in Edge and Safari.
  */

.tailwind b,
  .tailwind strong {
  font-weight: bolder;
}

/**
  1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
  2. Correct the odd 'em' font sizing in all browsers.
  */

.tailwind code,
  .tailwind kbd,
  .tailwind samp,
  .tailwind pre {
  font-family:
            ui-monospace,
            SFMono-Regular,
            Consolas,
            'Liberation Mono',
            Menlo,
            monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
  Add the correct font size in all browsers.
  */

.tailwind small {
  font-size: 80%;
}

/**
  Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
  */

.tailwind sub,
  .tailwind sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/*
  Text-level semantics
  ====================
  */

.tailwind sub {
  bottom: -0.25em;
}

/*
  Grouping content
  ================
  */

.tailwind sup {
  top: -0.5em;
}

/**
  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
  2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
  */

.tailwind table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/**
  1. Change the font styles in all browsers.
  2. Remove the margin in Firefox and Safari.
  */

.tailwind button,
  .tailwind input,
  .tailwind optgroup,
  .tailwind select,
  .tailwind textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
  Remove the inheritance of text transform in Edge and Firefox.
  1. Remove the inheritance of text transform in Firefox.
  */

.tailwind button,
  .tailwind select {
  /* 1 */
  text-transform: none;
}

/**
  Correct the inability to style clickable types in iOS and Safari.
  */

.tailwind button,
  .tailwind [type='button'],
  .tailwind [type='reset'],
  .tailwind [type='submit'] {
  -webkit-appearance: button;
}

/**
  Remove the inner border and padding in Firefox.
  */

.tailwind ::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
  Restore the focus styles unset by the previous rule.
  */

.tailwind :-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
  Remove the additional ':invalid' styles in Firefox.
  See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
  */

.tailwind :-moz-ui-invalid {
  box-shadow: none;
}

/**
  Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
  */

.tailwind legend {
  padding: 0;
}

/**
  Add the correct vertical alignment in Chrome and Firefox.
  */

.tailwind progress {
  vertical-align: baseline;
}

/**
  Correct the cursor style of increment and decrement buttons in Safari.
  */

.tailwind ::-webkit-inner-spin-button,
  .tailwind ::-webkit-outer-spin-button {
  height: auto;
}

/**
  1. Correct the odd appearance in Chrome and Safari.
  2. Correct the outline style in Safari.
  */

.tailwind [type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
  Remove the inner padding in Chrome and Safari on macOS.
  */

.tailwind ::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
  1. Correct the inability to style clickable types in iOS and Safari.
  2. Change font properties to 'inherit' in Safari.
  */

.tailwind ::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
  Add the correct display in Chrome and Safari.
  */

.tailwind summary {
  display: list-item;
}

/**
   * Removes the default spacing and border for appropriate elements.
   */

.tailwind blockquote,
  .tailwind dl,
  .tailwind dd,
  .tailwind h1,
  .tailwind h2,
  .tailwind h3,
  .tailwind h4,
  .tailwind h5,
  .tailwind h6,
  .tailwind hr,
  .tailwind figure,
  .tailwind p,
  .tailwind pre {
  margin: 0;
}

/**
   * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
   * A thin layer on top of normalize.css that provides a starting point more
   * suitable for web applications.
   */

.tailwind button {
  background-color: transparent;
  background-image: none;
}

/*
  Interactive
  ===========
  */

.tailwind fieldset {
  margin: 0;
  padding: 0;
}

/*
  Forms
  =====
  */

.tailwind ol,
  .tailwind ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
   * 1. Use the user's configured `sans` font-family (with Tailwind's default
   *    sans-serif font stack as a fallback) as a sane default.
   * 2. Use Tailwind's default "normal" line-height so the user isn't forced
   *    to override it to ensure consistency even when using the default theme.
   */

.tailwind html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
   * Inherit font-family and line-height from `html` so users can set them as
   * a class directly on the `html` element.
   */

.tailwind body {
  font-family: inherit;
  line-height: inherit;
}

/**
   * 1. Prevent padding and border from affecting element width.
   *
   *    We used to set this in the html element and inherit from
   *    the parent element for everything else. This caused issues
   *    in shadow-dom-enhanced elements like <details> where the content
   *    is wrapped by a div with box-sizing set to `content-box`.
   *
   *    https://github.com/mozdevs/cssremedy/issues/4
   *
   *
   * 2. Allow adding a border to an element by just adding a border-width.
   *
   *    By default, the way the browser specifies that an element should have no
   *    border is by setting it's border-style to `none` in the user-agent
   *    stylesheet.
   *
   *    In order to easily add borders to elements by just setting the `border-width`
   *    property, we change the default border-style for all elements to `solid`, and
   *    use border-width to hide them instead. This way our `border` utilities only
   *    need to set the `border-width` property instead of the entire `border`
   *    shorthand, making our border utilities much more straightforward to compose.
   *
   *    https://github.com/tailwindcss/tailwindcss/pull/116
   */

.tailwind *,
  .tailwind ::before,
  .tailwind ::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
   * Ensure horizontal rules are visible by default
   */

.tailwind hr {
  border-top-width: 1px;
}

/**
   * Undo the `border-style: none` reset that Normalize applies to images so that
   * our `border-{width}` utilities have the expected effect.
   *
   * The Normalize reset is unnecessary for us since we default the border-width
   * to 0 on all elements.
   *
   * https://github.com/tailwindcss/tailwindcss/issues/362
   */

.tailwind img {
  border-style: solid;
}

/**
   * Tailwind custom reset styles
   */

.tailwind textarea {
  resize: vertical;
}

/*
  Tabular data
  ============
  */

.tailwind input::-moz-placeholder, .tailwind textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

.tailwind input:-ms-input-placeholder, .tailwind textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

.tailwind input::placeholder,
  .tailwind textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

/*
  Sections
  ========
  */

.tailwind button,
  .tailwind [role="button"] {
  cursor: pointer;
}

/**
   * Override legacy focus reset from Normalize with modern Firefox focus styles.
   *
   * This is actually an improvement over the new defaults in Firefox in our testing,
   * as it triggers the better focus styles even for links, which still use a dotted
   * outline in Firefox by default.
   */

.tailwind :-moz-focusring {
  outline: auto;
}

/*
  Document
  ========
  */

.tailwind table {
  border-collapse: collapse;
}

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

.tailwind h1,
  .tailwind h2,
  .tailwind h3,
  .tailwind h4,
  .tailwind h5,
  .tailwind h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
   * Reset links to optimize for opt-in styling instead of
   * opt-out.
   */

.tailwind a {
  color: inherit;
  text-decoration: inherit;
}

/**
   * Reset form element properties that are easy to forget to
   * style explicitly so you don't inadvertently introduce
   * styles that deviate from your design system. These styles
   * supplement a partial reset that is already applied by
   * normalize.css.
   */

.tailwind button,
  .tailwind input,
  .tailwind optgroup,
  .tailwind select,
  .tailwind textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
   * Use the configured 'mono' font family for elements that
   * are expected to be rendered with a monospace font, falling
   * back to the system monospace stack if there is no configured
   * 'mono' font family.
   */

.tailwind pre,
  .tailwind code,
  .tailwind kbd,
  .tailwind samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
   * 1. Make replaced elements `display: block` by default as that's
   *    the behavior you want almost all of the time. Inspired by
   *    CSS Remedy, with `svg` added as well.
   *
   *    https://github.com/mozdevs/cssremedy/issues/14
   *
   * 2. Add `vertical-align: middle` to align replaced elements more
   *    sensibly by default when overriding `display` by adding a
   *    utility like `inline`.
   *
   *    This can trigger a poorly considered linting error in some
   *    tools but is included by design.
   *
   *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
   */

.tailwind img,
  .tailwind svg,
  .tailwind video,
  .tailwind canvas,
  .tailwind audio,
  .tailwind iframe,
  .tailwind embed,
  .tailwind object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
   * Constrain images and videos to the parent width and preserve
   * their intrinsic aspect ratio.
   *
   * https://github.com/mozdevs/cssremedy/issues/14
   */

.tailwind img,
  .tailwind video {
  max-width: 100%;
  height: auto;
}

/**
   * Ensure the default browser behavior of the `hidden` attribute.
   */

.tailwind [hidden] {
  display: none;
}

/***** Tailwind resets *****/

.tailwind .checked\:tw-border-transparent:checked {
  border-color: transparent;
}

.tailwind .hover\:tw-cursor-pointer:hover {
  cursor: pointer;
}

.tailwind .hover\:tw-bg-gray-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
}

.tailwind .hover\:tw-text-gray-900:hover {
  --tw-text-opacity: 1;
  color: rgba(17, 24, 39, var(--tw-text-opacity));
}

.tailwind .hover\:tw-underline:hover {
  text-decoration: underline;
}

.tailwind .focus\:tw-outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tailwind .focus\:tw-ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.tailwind .focus\:tw-ring-gray-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(107, 114, 128, var(--tw-ring-opacity));
}

.tailwind .focus\:tw-ring-\[\#84c793\]:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(132, 199, 147, var(--tw-ring-opacity));
}

.tailwind .focus\:tw-ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}