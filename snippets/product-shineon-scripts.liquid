{% case product-shineon-scripts %}

    {% when 'modal' %}

    <script>
        /*!
         * Bootstrap Modal v3.4.1 (https://getbootstrap.com/)
         * Copyright 2011-2019 Twitter, Inc.
         * Licensed under the MIT license
         *
         * Retro-fitted for ShineOn
         */
        document.addEventListener("DOMContentLoaded", function (event) {
            if (typeof jQuery === 'undefined') {
                throw new Error('Bootstrap\'s JavaScript requires jQuery')
            }

            +function ($) {
                'use strict';
                var version = $.fn.jquery.split(' ')[0].split('.');
                if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {
                    throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')
                }
            }(jQuery);

            /* ========================================================================
             * Bootstrap: modal.js v3.4.1
             * https://getbootstrap.com/docs/3.4/javascript/#modals
             * ========================================================================
             * Copyright 2011-2019 Twitter, Inc.
             * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
             * ======================================================================== */


            +function ($) {
                'use strict';

                // MODAL CLASS DEFINITION
                // ======================

                var Modal = function (element, options) {
                    this.options = options;
                    this.$body = $(document.body);
                    this.$element = $(element);
                    this.$dialog = this.$element.find('.so-modal-dialog');
                    this.$backdrop = null;
                    this.isShown = null;
                    this.originalBodyPad = null;
                    this.scrollbarWidth = 0;
                    this.ignoreBackdropClick = false;
                    this.fixedContent = '.navbar-fixed-top, .navbar-fixed-bottom';

                    if (this.options.remote) {
                        this.$element
                            .find('.so-modal-content')
                            .load(this.options.remote, $.proxy(function () {
                                this.$element.trigger('loaded.bs.so-modal')
                            }, this));
                    }
                };

                Modal.VERSION = '3.4.1';

                Modal.TRANSITION_DURATION = 300;
                Modal.BACKDROP_TRANSITION_DURATION = 150;

                Modal.DEFAULTS = {
                    backdrop: true,
                    keyboard: true,
                    show: true
                };

                Modal.prototype.toggle = function (_relatedTarget) {
                    return this.isShown ? this.hide() : this.show(_relatedTarget)
                };

                Modal.prototype.show = function (_relatedTarget) {
                    var that = this;
                    var e = $.Event('show.bs.so-modal', { relatedTarget: _relatedTarget });

                    this.$element.trigger(e);

                    if (this.isShown || e.isDefaultPrevented()) return;

                    this.isShown = true;

                    this.checkScrollbar();
                    this.setScrollbar();
                    this.$body.addClass('modal-open');

                    this.escape();
                    this.resize();

                    this.$element.on('click.dismiss.bs.so-modal', '[data-dismiss="so-modal"]', $.proxy(this.hide, this));

                    this.$dialog.on('mousedown.dismiss.bs.so-modal', function () {
                        that.$element.one('mouseup.dismiss.bs.so-modal', function (e) {
                            if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
                        });
                    });

                    this.backdrop(function () {
                        var transition = $.support.transition && that.$element.hasClass('fade');

                        if (!that.$element.parent().length) {
                            that.$element.appendTo(that.$body) // don't move modals dom position
                        }

                        that.$element
                            .show()
                            .scrollTop(0);

                        that.adjustDialog();

                        if (transition) {
                            that.$element[0].offsetWidth; // force reflow
                        }

                        that.$element.addClass('in');

                        that.enforceFocus();

                        var e = $.Event('shown.bs.so-modal', { relatedTarget: _relatedTarget });

                        transition ?
                            that.$dialog // wait for modal to slide in
                                .one('bsTransitionEnd', function () {
                                    that.$element.trigger('focus').trigger(e)
                                })
                                .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
                            that.$element.trigger('focus').trigger(e)
                    })
                };

                Modal.prototype.hide = function (e) {
                    if (e) e.preventDefault();

                    e = $.Event('hide.bs.so-modal');

                    this.$element.trigger(e);

                    if (!this.isShown || e.isDefaultPrevented()) return;

                    this.isShown = false;

                    this.escape();
                    this.resize();

                    $(document).off('focusin.bs.so-modal');

                    this.$element
                        .removeClass('in')
                        .off('click.dismiss.bs.so-modal')
                        .off('mouseup.dismiss.bs.so-modal');

                    this.$dialog.off('mousedown.dismiss.bs.so-modal');

                    $.support.transition && this.$element.hasClass('fade') ?
                        this.$element
                            .one('bsTransitionEnd', $.proxy(this.hideModal, this))
                            .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
                        this.hideModal()
                };

                Modal.prototype.enforceFocus = function () {
                    $(document)
                        .off('focusin.bs.so-modal') // guard against infinite focus loop
                        .on('focusin.bs.so-modal', $.proxy(function (e) {
                            if (document !== e.target &&
                                this.$element[0] !== e.target &&
                                !this.$element.has(e.target).length) {
                                this.$element.trigger('focus')
                            }
                        }, this))
                };

                Modal.prototype.escape = function () {
                    if (this.isShown && this.options.keyboard) {
                        this.$element.on('keydown.dismiss.bs.so-modal', $.proxy(function (e) {
                            e.which == 27 && this.hide()
                        }, this))
                    } else if (!this.isShown) {
                        this.$element.off('keydown.dismiss.bs.so-modal')
                    }
                };

                Modal.prototype.resize = function () {
                    if (this.isShown) {
                        $(window).on('resize.bs.so-modal', $.proxy(this.handleUpdate, this))
                    } else {
                        $(window).off('resize.bs.so-modal')
                    }
                };

                Modal.prototype.hideModal = function () {
                    var that = this;
                    this.$element.hide();
                    this.backdrop(function () {
                        that.$body.removeClass('modal-open');
                        that.resetAdjustments();
                        that.resetScrollbar();
                        that.$element.trigger('hidden.bs.so-modal');
                    })
                };

                Modal.prototype.removeBackdrop = function () {
                    this.$backdrop && this.$backdrop.remove();
                    this.$backdrop = null;
                };

                Modal.prototype.backdrop = function (callback) {
                    var that = this;
                    var animate = this.$element.hasClass('fade') ? 'fade' : '';

                    if (this.isShown && this.options.backdrop) {
                        var doAnimate = $.support.transition && animate;

                        this.$backdrop = $(document.createElement('div'))
                            .addClass('so-modal-backdrop ' + animate)
                            .appendTo(this.$body);

                        this.$element.on('click.dismiss.bs.so-modal', $.proxy(function (e) {
                            if (this.ignoreBackdropClick) {
                                this.ignoreBackdropClick = false;
                                return
                            }
                            if (e.target !== e.currentTarget) return;
                            this.options.backdrop == 'static'
                                ? this.$element[0].focus()
                                : this.hide();
                        }, this));

                        if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow

                        this.$backdrop.addClass('in');

                        if (!callback) return;

                        doAnimate ?
                            this.$backdrop
                                .one('bsTransitionEnd', callback)
                                .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
                            callback();

                    } else if (!this.isShown && this.$backdrop) {
                        this.$backdrop.removeClass('in');

                        var callbackRemove = function () {
                            that.removeBackdrop();
                            callback && callback();
                        };
                        $.support.transition && this.$element.hasClass('fade') ?
                            this.$backdrop
                                .one('bsTransitionEnd', callbackRemove)
                                .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
                            callbackRemove();

                    } else if (callback) {
                        callback()
                    }
                };

                // these following methods are used to handle overflowing modals

                Modal.prototype.handleUpdate = function () {
                    this.adjustDialog();
                };

                Modal.prototype.adjustDialog = function () {
                    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;

                    this.$element.css({
                        paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
                        paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
                    })
                };

                Modal.prototype.resetAdjustments = function () {
                    this.$element.css({
                        paddingLeft: '',
                        paddingRight: ''
                    })
                };

                Modal.prototype.checkScrollbar = function () {
                    var fullWindowWidth = window.innerWidth;
                    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
                        var documentElementRect = document.documentElement.getBoundingClientRect();
                        fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
                    }
                    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
                    this.scrollbarWidth = this.measureScrollbar();
                };

                Modal.prototype.setScrollbar = function () {
                    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10);
                    this.originalBodyPad = document.body.style.paddingRight || '';
                    var scrollbarWidth = this.scrollbarWidth;
                    if (this.bodyIsOverflowing) {
                        this.$body.css('padding-right', bodyPad + scrollbarWidth);
                        $(this.fixedContent).each(function (index, element) {
                            var actualPadding = element.style.paddingRight;
                            var calculatedPadding = $(element).css('padding-right');
                            $(element)
                                .data('padding-right', actualPadding)
                                .css('padding-right', parseFloat(calculatedPadding) + scrollbarWidth + 'px');
                        })
                    }
                };

                Modal.prototype.resetScrollbar = function () {
                    this.$body.css('padding-right', this.originalBodyPad);
                    $(this.fixedContent).each(function (index, element) {
                        var padding = $(element).data('padding-right');
                        $(element).removeData('padding-right');
                        element.style.paddingRight = padding ? padding : '';
                    })
                };

                Modal.prototype.measureScrollbar = function () { // thx walsh
                    var scrollDiv = document.createElement('div');
                    scrollDiv.className = 'modal-scrollbar-measure';
                    this.$body.append(scrollDiv);
                    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
                    this.$body[0].removeChild(scrollDiv);
                    return scrollbarWidth;
                };


                // MODAL PLUGIN DEFINITION
                // =======================

                function Plugin(option, _relatedTarget) {
                    return this.each(function () {
                        var $this = $(this);
                        var data = $this.data('bs.so-modal');
                        var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);

                        if (!data) $this.data('bs.so-modal', (data = new Modal(this, options)));
                        if (typeof option == 'string') data[option](_relatedTarget);
                        else if (options.show) data.show(_relatedTarget);
                    })
                };

                var old = $.fn.modal;

                $.fn.so_modal = Plugin;
                $.fn.so_modal.Constructor = Modal;


                // MODAL NO CONFLICT
                // =================

                $.fn.so_modal.noConflict = function () {
                    $.fn.so_modal = old;
                    return this;
                };


                // MODAL DATA-API
                // ==============

                $(document).on('click.bs.so-modal.data-api', '[data-toggle="so-modal"]', function (e) {
                    var $this = $(this);
                    var href = $this.attr('href');
                    var target = $this.attr('data-target') ||
                        (href && href.replace(/.*(?=#[^\s]+$)/, '')); // strip for ie7

                    var $target = $(document).find(target);
                    var option = $target.data('bs.so-modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data());

                    if ($this.is('a')) e.preventDefault();

                    $target.one('show.bs.so-modal', function (showEvent) {
                        if (showEvent.isDefaultPrevented()) return; // only register focus restorer if modal will actually get shown
                        $target.one('hidden.bs.so-modal', function () {
                            $this.is(':visible') && $this.trigger('focus');
                        })
                    });
                    Plugin.call($target, option, this);
                })

            }(jQuery);

            /* ========================================================================
             * Bootstrap: transition.js v3.4.1
             * https://getbootstrap.com/docs/3.4/javascript/#transitions
             * ========================================================================
             * Copyright 2011-2019 Twitter, Inc.
             * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
             * ======================================================================== */


            +function ($) {
                'use strict';

                // CSS TRANSITION SUPPORT (Shoutout: https://modernizr.com/)
                // ============================================================

                function transitionEnd() {
                    var el = document.createElement('bootstrap');

                    var transEndEventNames = {
                        WebkitTransition : 'webkitTransitionEnd',
                        MozTransition    : 'transitionend',
                        OTransition      : 'oTransitionEnd otransitionend',
                        transition       : 'transitionend'
                    };

                    for (var name in transEndEventNames) {
                        if (el.style[name] !== undefined) {
                            return { end: transEndEventNames[name] };
                        }
                    }

                    return false; // explicit for ie8 (  ._.)
                }

                // https://blog.alexmaccaw.com/css-transitions
                $.fn.emulateTransitionEnd = function (duration) {
                    var called = false;
                    var $el = this;
                    $(this).one('bsTransitionEnd', function () { called = true });
                    var callback = function () { if (!called) $($el).trigger($.support.transition.end) };
                    setTimeout(callback, duration);
                    return this;
                };

                $(function () {
                    $.support.transition = transitionEnd();

                    if (!$.support.transition) return;

                    $.event.special.bsTransitionEnd = {
                        bindType: $.support.transition.end,
                        delegateType: $.support.transition.end,
                        handle: function (e) {
                            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
                        }
                    };
                })

            }(jQuery);
        });
    </script>

    {% when 'nav-progress-steps' %}

    {% if section.settings.bu_show_progress_steps_bar %}
    <div class="so-container so-bu-progress-bar-steps-w">
        <ul id="so-bu-progress-bar-steps">
            <li class="progress-bar__steps active">
                <span class="progress-bar__steps--text-w">
                    <span class="progress-bar__steps--iterration">1</span>
                    <span class="progress-bar__steps--text">{{ 'buyer_upload_progress_step1' | t }}</span>
                </span>
            </li>
            <li class="progress-bar__steps">
                <span class="progress-bar__steps--text-w">
                    <span class="progress-bar__steps--iterration">2</span>
                    <span class="progress-bar__steps--text">{{ 'buyer_upload_progress_step2' | t }}</span>
                </span>
            </li>
            <li class="progress-bar__steps">
                <span class="progress-bar__steps--text-w">
                    <span class="progress-bar__steps--iterration">3</span>
                    <span class="progress-bar__steps--text">{{ 'buyer_upload_progress_step3' | t }}</span>
                </span>
            </li>
        </ul>
    </div>
    {% endif %}

    <style>
        {% if section.settings.bu_show_progress_steps_bar %}
        .so-bu-progress-bar-steps-w {
            max-width: calc(1170px - 4%);
            margin-bottom: 20px;
        }
        .main-content {
            padding-top: 0;
        }
        #so-bu-progress-bar-steps {
            list-style: none;
            overflow: hidden;
            font-size: 16px;
            font-weight: 700;
            display: flex;
            padding: 0;
            line-height: 1.3;
        }
        #so-bu-progress-bar-steps .progress-bar__steps {
            flex: 0 0 33.3333%;
            position: relative;
            cursor: default;
            list-style-image: none;
            list-style-type: none;
            margin: 0;
            text-align: center;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:first-child {
            padding-left: 20px;
            text-align: left;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:last-child {
            padding-right: 20px;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:last-child:before,
        #so-bu-progress-bar-steps .progress-bar__steps.active:last-child:after {
            right: 20px;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:first-child:after,
        #so-bu-progress-bar-steps .progress-bar__steps:last-child:after {
            width: calc(100% - 20px);
        }
        #so-bu-progress-bar-steps .progress-bar__steps:last-child {
            text-align: right;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:before,
        #so-bu-progress-bar-steps .progress-bar__steps:after,
        #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text-w:after,
        #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text-w:before {
            content: "";
            display: block;
            position: absolute;
            top: 20px;
            height: 8px;
            transform: translateY(-50%);
            width: 100%;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:after,
        #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text-w:after {
            border-radius: 10px;
            z-index: 2;
        }
        #so-bu-progress-bar-steps .progress-bar__steps.active + .active:after {
            width: calc(100% + 10px);
        }
        #so-bu-progress-bar-steps .progress-bar__steps.active + .active:not(:last-child):after {
            left: -10px;
        }
        #so-bu-progress-bar-steps .progress-bar__steps.active:after {
            background-color: {{ section.settings.bu_progress_active_bg_color }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps:before {
            background-color: {{ section.settings.bu_progress_unactive_bg_color }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text-w {
            position: relative;
            z-index: 3;
            display: inline-flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: {{ section.settings.bu_progress_unactive_text_color }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps:first-child .progress-bar__steps--text-w:before,
        #so-bu-progress-bar-steps .progress-bar__steps:last-child .progress-bar__steps--text-w:before {
            width: 50%;
            z-index: -1;
            background-color: {{ section.settings.page_bg }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps:first-child .progress-bar__steps--text-w:before {
            left: 0;
        }
        #so-bu-progress-bar-steps .progress-bar__steps:last-child .progress-bar__steps--text-w:before {
            right: 0;
        }
        #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--iterration {
            width: 40px;
            line-height: 40px;
            border-radius: 100%;
            text-align: center;
            background-color: {{ section.settings.bu_progress_unactive_text_color }};
            color: {{ section.settings.bu_progress_active_text_color }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps.active .progress-bar__steps--iterration {
            background-color: {{ section.settings.bu_progress_active_bg_color }};
            color: {{ section.settings.bu_progress_active_text_color }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps.active .progress-bar__steps--text {
            color: {{ section.settings.bu_progress_active_bg_color }};
        }
        #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text {
            margin-top: 5px;
        }
        @media screen and (max-width: 540px) {
            #so-bu-progress-bar-steps {
                font-size: 12px;
            }
            #so-bu-progress-bar-steps .progress-bar__steps:first-child {
                padding-left: 10px;
            }
            #so-bu-progress-bar-steps .progress-bar__steps:last-child {
                padding-right: 10px;
            }
            #so-bu-progress-bar-steps .progress-bar__steps:first-child:after,
            #so-bu-progress-bar-steps .progress-bar__steps:last-child:after {
                width: calc( 100% - 10px);
            }
            #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--iterration {
                width: 30px;
                line-height: 30px;
                border-radius: 100%;
            }
            #so-bu-progress-bar-steps .progress-bar__steps:before,
            #so-bu-progress-bar-steps .progress-bar__steps:after,
            #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text-w:after,
            #so-bu-progress-bar-steps .progress-bar__steps .progress-bar__steps--text-w:before {
                top: 15px;
            }
        }
        {% endif %}
        @media(min-width: 768px) {
            #shopify-section-{{ section.id }} {
                padding-top: 30px;
            }
            .sopp-body {
                padding-top: 30px;
            }
        }
        #so-bu-loading {
            position: fixed;
            z-index: 99999999;
            margin: auto;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background-color: rgba(255,255,255,.7);
        }
        #so-bu-loading:after {
            content: "";
            display: block;
            position: absolute;
            top: 50%;
            left: 50%;
            width: 32px;
            height: 32px;
            margin: -16px 0 0 -16px;
            border-radius: 50%;
            border: 4px solid #042362;
            border-color: #042362 transparent #042362 transparent;
            animation: lds-dual-ring 1.2s linear infinite;
        }
        @keyframes lds-dual-ring {
          0% {
            transform: rotate(0deg);
          }
          100% {
            transform: rotate(360deg);
          }
        }
        #so-bu-loading:before {
            content: '';
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.2);
        }
        .product-template-shineon__container .so-bu-step1,
        .product-template-shineon__container .so-bu-step2,
        .product-template-shineon__container .so-bu-step3,
        .product-template-shineon__container.so-bu-step1 .product-quantity-w,
        .product-template-shineon__container.so-bu-step2 .product-quantity-w {
            display: none;
        }
        .product-template-shineon__container.so-bu-step1 .so-bu-step1,
        .product-template-shineon__container.so-bu-step2 .so-bu-step2,
        .product-template-shineon__container.so-bu-step3 .so-bu-step3 {
            display: inherit;
        }
        #so-bu-img-viewer-wrapper{
            position: relative;
            max-width: 400px;
            height: auto;
            margin: auto;
        }
        .so-img-drop-main {
            position: relative;
            border: 1px solid #e2e2e2;
            margin-bottom: 2em;
            background-color: #fff;
        }
        #so-bu-default-transformation{
            position: absolute;
            top:0;
            left: 0;
            max-width: 100%;
            height: auto;
            z-index: 10;
        }
        #so-bu-upload-button{
            width: 100%;
            margin: 2em 0 0;
            font-weight: 600;
            max-width: 30em;
            display: inline-block;
            color: {{ section.settings.upload_button_text_color }};
            {% if section.settings.add_to_cart_btn_effect != '3d' %}
            background-color: {{ section.settings.upload_button_bg_color }};
            border: 1px solid {{ section.settings.upload_button_bg_color }};
            {% endif %}
        }
        #so-bu-upload-button:hover {
          background-color: {{ section.settings.upload_button_bg_color | color_lighten: 5 }};
        }
        #so-bu-upload-button .so-icons {
            margin-right: 0.5rem;
        }
        #so-bu-upload-button svg {
            fill: currentColor;
            height: 1.4em;
            width: 1.4em;
        }
        .so-bu-buttons {
            text-align: center;
            padding: 0.4em;
            cursor: pointer;
            font-weight: 600;
            font-size: 18px;
            line-height: 22px;
            text-transform: uppercase;
        }
        .so-bu-buttons,
        .so-form-btn-cta-main {
            color: {{ section.settings.add_to_cart_fg_color }};
            background-color: {{ section.settings.upload_button_bg_color }};
            border: 1px solid {{ section.settings.upload_button_bg_color }} !important;
        }
        #so-step-buttons .so-bu-confirm-design {
            font-size: {{ section.settings.bu_confirm_design_font_size_range }}px;
        }
        @media(max-width: 767px) {
            .so-product #so-step-buttons .so-bu-buttons {
                font-size: 14px !important;
            }
        }
        .so-bu-buttons:focus {
            outline:0;
        }
        .so-bu-buttons:hover{
            color: {{ section.settings.add_to_cart_fg_color | color_darken: 5}};
            background-color: {{ section.settings.upload_button_bg_color | color_darken: 5 }};
        }
        .so-upload-button-wrap{
            position: relative;
        }
        .so-upload-button-wrap input[type="file"]{
            top: 0; bottom: 0; left:0; right: 0;
        }
        #so-image-controls span {
            position: absolute;
        }
        .so-image-controls span {
            width: 1.5em;
            height: 1.5em;
            color: {{ section.settings.primary_color }};
            background-color: transparent;
            user-select: none;
            -moz-user-select: none;
            -khtml-user-select: none;
            -webkit-user-select: none;
            -o-user-select: none;
            z-index: 999;
        }
        .so-image-controls span.so-icon-undo,
        .so-image-controls span.so-icon-redo,
        .so-image-controls span.so-icon-search-minus,
        .so-image-controls span.so-icon-search-plus {
            width: 1em;
            height: 1em;
        }
        .so-image-controls span:hover{
            cursor: pointer;
            opacity: 1;
            color: {{ section.settings.primary_color | color_darken: 10 }};
        }
        .so-image-controls span.disabled{
            cursor: not-allowed;
            opacity: 0.5;
        }
        #so-image-controls span.so-icon-angle-left {
            top: calc(50% - 0.75em);
            left: -1.5em;
        }
        #so-image-controls span.so-icon-angle-right {
            top: calc(50% - 0.75em);
            right: -1.5em;
        }
        #so-image-controls span.so-icon-angle-up {
            top: -1.5em;
            left: calc(50% - 0.75em);
        }
        #so-image-controls span.so-icon-angle-down {
            bottom: -1.5em;
            left: calc(50% - 0.75em);
        }
        #so-image-controls span.so-icon-undo {
            top: 12px;
            left: 12px;
        }
        #so-image-controls span.so-icon-redo {
            top: 12px;
            right: 12px;
        }
        #so-image-controls span.so-icon-search-minus {
            bottom: 12px;
            left: 12px;
        }
        #so-image-controls span.so-icon-search-plus {
            bottom: 12px;
            right: 12px;
        }
        svg {
            display: inline-block;
            vertical-align: middle;
            max-width: 100%;
            max-height: 100%;
            width: auto;
            height: auto;
        }
        img.so-image {
            max-width: 100%;
        }
        #so-bu-back-to-img-wizard{
            line-height: 1.5em;
            height: 1.5em;
            z-index: 99999;
            vertical-align: middle;
            display: none;
        }
        #so-bu-back-to-img-wizard .so-icon-fa-long-arrow-left svg {
            position: relative;
            top: -1px;
        }
        #so-step-buttons{
            display: flex;
            justify-content: unset;
            flex-direction: row;
            flex-wrap: nowrap;
            margin: 2em 0 0;
        }
        .so-step-2 #so-step-buttons {
            margin-top: 5px;
        }
        #so-step-buttons .so-bu-buttons {
            flex: 1 1 100%;
            border-radius: 0;
            display: flex;
            align-items: center;
            border: 1px solid {{ section.settings.add_to_cart_fg_color }};
        }
        #so-step-buttons > a {
            text-align: center;
            padding: 10px;
            flex: 1 1 68%;
        }
        #so-step-buttons > a:hover {
            cursor: pointer;
        }
        #so-step-buttons .so-bu-upload-new-image {
            flex: 1 1 32%;
            font-size: 14px;
            padding-left: 0;
            padding-right: 0;
        }
        #so-step-buttons .so-bu-confirm-design:hover {
            color: #fff;
        }
        #so-step-buttons .so-bu-buttons.so-bu-upload-new-image{
            border-right: none;
            opacity: 0.8;
        }
        #so-step-buttons .so-bu-buttons > span {
            flex: 1 1 100%;
            text-align: center;
            color: {{ section.settings.add_to_cart_fg_color }};
        }
        #so-step-buttons .so-bu-buttons > span,
        #so-step-buttons .so-bu-buttons > svg {
            fill: {{ section.settings.add_to_cart_fg_color }};
        }
        #so-step-buttons .so-bu-upload-new-image:hover > span {
            opacity: 1;
        }
        #so-step-buttons .so-icon-fa-long-arrow-left {
            margin-right: 3px;
        }
        #so-step-buttons .so-icon-fa-long-arrow-right {
            margin-left: 3px;
        }
        #so-bu-mobile-controls-message {
            position: absolute;
            bottom: 35px;
            width: 100%;
            z-index: 10;
        }
        #so-bu-mobile-controls-message:after {
            content: "";
            background: url('{{ 'theme-shineon-mobile-info-pinch-to-adjust.gif' | asset_url }}') no-repeat center center / contain;
            display: inline-block;
            width: 45px;
            height: 35px;
            vertical-align: middle;
        }
        #so-bu-upload-button-info {
            font-size: 15px;
        }
        #so-bu-upload-button-info .so-icon-angle-right,
        #so-bu-upload-button-info .so-icon-angle-left {
            font-size: 9px;
        }
        @media only screen and (max-width: 767px) {
            /* Fixed button for mobile */
            #so-btn-add-to-cart-w.fixed {
                position: fixed !important;
                bottom: 0;
                left: 0;
                right: 0;
                top: inherit !important;
                z-index: 1001;
            }
            #so-btn-add-to-cart-w.fixed .so-btn-add-to-cart {
                border-radius: 0;
            }
            #so-step-buttons.fixed,
            .so-upload-button-wrap.fixed {
                position: fixed !important;
                bottom: 0;
                left: 0;
                right: 0;
                top: inherit !important;
                z-index: 1001;
                margin: 0;
                background-color: #fff;
                padding: 15px;
            }
            #so-bu-upload-button {
                border-radius: 0;
                margin: 0;
                width: 100%;
                max-width: none;
                font-size: 18px;
                line-height: 22px;
            }
            #so-step-buttons .so-bu-buttons {
                padding: 10px;
            }
            .so-img-drop-main {
                border: none;
                margin-bottom: 0.5em;
                padding-bottom: 35px;
            }
            #so-bu-upload-button-info{
                font-size: 14px;
                font-weight: 400;
                margin-top: 10px;
            }
            #so-image-controls span.so-icon-angle-left,
            #so-image-controls span.so-icon-angle-right,
            #so-image-controls span.so-icon-angle-up,
            #so-image-controls span.so-icon-angle-down,
            #so-bu-upload-button-info,
            .so-step-2 .with-rating {
                display: none;
            }
        }
        /* https://developer.mozilla.org/en-US/docs/Web/CSS/position#fixed */
        .so-position-fixed {
            -webkit-transform: none;
            -ms-transform: none;
            transform: none;
            -webkit-perspective: none;
            perspective: none;
            -webkit-filter: none;
            filter: none;
            will-change: unset;
        }

        /* cropper plugin styles */
        .cropper-container{direction:ltr;font-size:0;line-height:0;position:relative;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.cropper-container img{display:block;height:100%;image-orientation:0deg;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;width:100%}.cropper-canvas,.cropper-crop-box,.cropper-drag-box,.cropper-modal,.cropper-wrap-box{bottom:0;left:0;position:absolute;right:0;top:0}.cropper-canvas,.cropper-wrap-box{overflow:hidden}.cropper-drag-box{background-color:#fff;opacity:0}.cropper-modal{background-color:#000;opacity:.5}.cropper-view-box{display:block;height:100%;outline:#39f solid 1px;overflow:hidden;width:100%}.cropper-dashed{border:0 dashed #eee;display:block;opacity:.5;position:absolute}.cropper-dashed.dashed-h{border-bottom-width:1px;border-top-width:1px;height:33.33333%;left:0;top:33.33333%;width:100%}.cropper-dashed.dashed-v{border-left-width:1px;border-right-width:1px;height:100%;left:33.33333%;top:0;width:33.33333%}.cropper-center{display:block;height:0;left:50%;opacity:.75;position:absolute;top:50%;width:0}.cropper-center:after,.cropper-center:before{background-color:#eee;content:' ';display:block;position:absolute}.cropper-center:before{height:1px;left:-3px;top:0;width:7px}.cropper-center:after{height:7px;left:0;top:-3px;width:1px}.cropper-face,.cropper-line,.cropper-point{display:block;height:100%;opacity:.1;position:absolute;width:100%}.cropper-face{background-color:#fff;left:0;top:0}.cropper-line,.cropper-point{background-color:#39f}.cropper-line.line-e{cursor:ew-resize;right:-3px;top:0;width:5px}.cropper-line.line-n{cursor:ns-resize;height:5px;left:0;top:-3px}.cropper-line.line-w{cursor:ew-resize;left:-3px;top:0;width:5px}.cropper-line.line-s{bottom:-3px;cursor:ns-resize;height:5px;left:0}.cropper-point{height:5px;opacity:.75;width:5px}.cropper-point.point-e{cursor:ew-resize;margin-top:-3px;right:-3px;top:50%}.cropper-point.point-n{cursor:ns-resize;left:50%;margin-left:-3px;top:-3px}.cropper-point.point-w{cursor:ew-resize;left:-3px;margin-top:-3px;top:50%}.cropper-point.point-s{bottom:-3px;cursor:s-resize;left:50%;margin-left:-3px}.cropper-point.point-ne{cursor:nesw-resize;right:-3px;top:-3px}.cropper-point.point-nw{cursor:nwse-resize;left:-3px;top:-3px}.cropper-point.point-sw{bottom:-3px;cursor:nesw-resize;left:-3px}.cropper-point.point-se{bottom:-3px;cursor:nwse-resize;height:20px;opacity:1;right:-3px;width:20px}@media (min-width:768px){.cropper-point.point-se{height:15px;width:15px}}@media (min-width:992px){.cropper-point.point-se{height:10px;width:10px}}@media (min-width:1200px){.cropper-point.point-se{height:5px;opacity:.75;width:5px}}.cropper-point.point-se:before{background-color:#39f;bottom:-50%;content:' ';display:block;height:200%;opacity:0;position:absolute;right:-50%;width:200%}.cropper-invisible{opacity:0}.cropper-hide{display:block;height:0;position:absolute;width:0}.cropper-hidden{display:none!important}.cropper-move{cursor:move}.cropper-crop{cursor:crosshair}.cropper-disabled .cropper-drag-box,.cropper-disabled .cropper-face,.cropper-disabled .cropper-line,.cropper-disabled .cropper-point{cursor:not-allowed}
        
        body:not(.so-step-3) .badges.hidden-sm-down,
        body:not(.so-step-3) .badges.hidden-sm-up,
        body:not(.so-step-3) .so-product-content {
            display: none !important;
        }
    </style>

    {% when 'instructions-steps' %}





<div id="so-bu-information" class="so-product">
    <div class="so-description">
        <div class="so-bu-step2">
            <div id="so-step-buttons">
                <a class="so-bu-upload-new-image">
                    <span>
                        {{ 'buyer_upload_btn_upload_new' | t }}
                    </span>
                </a>
                <a class="so-form-btn-cta-main so-bu-confirm-design">
                    <span>
                        {{ 'buyer_upload_btn_confirm_design' | t }}
                    </span>
                </a>
            </div>
            <span class="so-btn-action-fixed" data-id="so-step-buttons"></span>
        </div>
        <div id="so-upload-button-wrap" class="so-upload-button-wrap so-center so-bu-step1">
            <input type="file"
                   name="properties[Upload]"
                   accept=".jpg,.jpeg,.png,.svg,.tiff,.bmp,.webp,.bpg"
                   id="so-bu-file-image-input"
                   style="position: absolute; width: 100%; height: 100%; max-height: 100px;opacity: 0; cursor:pointer; z-index: 9999;" form="{{ product_form_id }}" />
            <input type="hidden"
                   name="properties[_UploadData]"
                   class="so-hidden" form="{{ product_form_id }}" />
            <a id="so-bu-upload-button" class="so-bu-buttons so-form-btn-cta-main" href="#">
                {% include 'shineon-app-icons' with 'fa-image-light', add_wrap: true %}
                {{ 'buyer_upload_button_text' | t }}
            </a>
        </div>
        <div class="custom-blank-ele"></div>
        <span class="so-btn-action-fixed" data-id="so-upload-button-wrap"></span>

        {% if section.settings.show_about_us_review_list != true %}
            {% if section.settings.payment_options %}
                <div class="below-atc">
                {% include 'product-info-shineon' with 'payment-icons' %}
                </div>
            {% endif %}

            {% if free_shipping == true and settings.free_shipping_position != 'badge' %}
                {% include 'product-info-shineon' with 'free-shipping' %}
            {% endif %}

            {% if section.settings.informations_alert_enable == true and product.available == true %}
                {% include 'product-informations-alert-shineon' with almost_gone_max_value: section.settings.almost_gone_max_value, almost_gone_interval: section.settings.almost_gone_interval, section_type: 'hurry_up' %}
            {% endif %}
        {% endif %}

        {% if section.settings.show_about_us_review_list != true %}
        <div class="so-bu-supplemental-content">
            {{ 'customizer_content_below_upload_step_html' | t }}
        </div>
        {% endif %}

        {% if section.settings.content_disposition == 'right_side_expanded' %}
        <div class="so-product-content">
            {{ product.content }}
        </div>
        {% endif %}

    </div>
</div>





    {% when 'upload-design-wizard' %}





<div id="so-bu-img-viewer-wrapper" class="step2 so-hidden">
    <div class="so-img-drop so-img-drop-main" style="height: 500px;">
        <img id="so-bu-default-transformation"
             class="so-image so-hidden step2"
             crossOrigin="anonymous">
        <div id="so-upload-wrapper">
            <img id="so-img-uploaded"
                 class="so-image"
                 crossOrigin="anonymous">
        </div>
        <div id="so-image-controls" class="so-image-controls">
            {% include 'shineon-app-icons' with 'angle-left', alt: 'Move image left or Click-hold on image', add_wrap: true %}
            {% include 'shineon-app-icons' with 'angle-right', alt: 'Move image right or Click-hold on image', add_wrap: true %}
            {% include 'shineon-app-icons' with 'angle-up', alt: 'Move image up or Click-hold on image', add_wrap: true %}
            {% include 'shineon-app-icons' with 'angle-down', alt: 'Move image down or Click-hold on image', add_wrap: true %}
            {% include 'shineon-app-icons' with 'search-plus', alt: 'Zoom-in or Scroll up on image', add_wrap: true %}
            {% include 'shineon-app-icons' with 'search-minus', alt: 'Zoom-out or Scroll down on image', add_wrap: true %}
            {% include 'shineon-app-icons' with 'undo', alt: 'Rotate counterclockwise', add_wrap: true %}
            {% include 'shineon-app-icons' with 'redo', alt: 'Rotate clockwise', add_wrap: true %}
        </div>
        <div id="so-bu-mobile-controls-message" class="so-row so-hidden so-center">
            <small>{{ 'buyer_upload_mobile_info_drag_or_pinch_msg' | t }}</small>
        </div>
    </div>
    <div id="so-bu-upload-button-info">
        {% capture arrow_left %}{% include 'shineon-app-icons' with 'angle-left', alt: 'Move image left or Click-hold on image', add_wrap: true %}{% endcapture %}
        {% capture arrow_right %}{% include 'shineon-app-icons' with 'angle-right', alt: 'Move image right or Click-hold on image', add_wrap: true %}{% endcapture %}
        {% capture arrow_up %}{% include 'shineon-app-icons' with 'angle-up', alt: 'Move image top or Click-hold on image', add_wrap: true %}{% endcapture %}
        {% capture arrow_bottom %}{% include 'shineon-app-icons' with 'angle-down', alt: 'Move image bottom or Click-hold on image', add_wrap: true %}{% endcapture %}
        {% capture search_plus %}{% include 'shineon-app-icons' with 'search-plus', alt: 'Zoom-in or Scroll up on image', add_wrap: true %}{% endcapture %}
        {% capture search_minus %}{% include 'shineon-app-icons' with 'search-minus', alt: 'Zoom-out or Scroll down on image', add_wrap: true %}{% endcapture %}
        {% capture undo %}{% include 'shineon-app-icons' with 'undo', alt: 'Rotate counterclockwise', add_wrap: true %}{% endcapture %}
        {% capture redo %}{% include 'shineon-app-icons' with 'redo', alt: 'Rotate clockwise', add_wrap: true %}{% endcapture %}
        {{ 'buyer_upload_below_image_html' | t | replace: '[arrow_left]', arrow_left | replace: '[arrow_right]', arrow_right | replace: '[arrow_up]', arrow_up | replace: '[arrow_bottom]', arrow_bottom | replace: '[zoom_in]', search_plus | replace: '[zoom_out]', search_minus | replace: '[rotate_left]', undo | replace: '[rotate_right]', redo }}
    </div>
</div>




    {% when 'buyer-upload-scripts' %}

<script>
    document.addEventListener("DOMContentLoaded", function() {
            /*!
             * Cropper v4.0.0-beta
             * https://github.com/fengyuanchen/cropper
             * Date: 2018-03-03T03:59:36.917Z
             * Namespaced to so_cropper
             */
        !function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],i):i(t.jQuery)}(this,function(t){"use strict";t=t&&t.hasOwnProperty("default")?t.default:t;var r="undefined"!=typeof window?window:{},c="cropper",k="all",T="crop",W="move",H="zoom",N="e",E="w",z="s",L="n",Y="ne",O="nw",X="se",R="sw",h=c+"-crop",i=c+"-disabled",S=c+"-hidden",l=c+"-hide",n=c+"-modal",p=c+"-move",m="action",u="preview",s="crop",d="move",g="none",a="crop",o="cropend",f="cropmove",v="cropstart",w="dblclick",x="load",b=r.PointerEvent?"pointerdown":"touchstart mousedown",y=r.PointerEvent?"pointermove":"touchmove mousemove",M=r.PointerEvent?"pointerup pointercancel":"touchend touchcancel mouseup",C="ready",D="resize",B="wheel mousewheel DOMMouseScroll",A="zoom",I=/^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/,j=/^data:/,U=/^data:image\/jpeg;base64,/,P=/^(?:img|canvas)$/i,q={viewMode:0,dragMode:s,aspectRatio:NaN,data:null,preview:"",responsive:!0,restore:!0,checkCrossOrigin:!0,checkOrientation:!0,modal:!0,guides:!0,center:!0,highlight:!0,background:!0,autoCrop:!0,autoCropArea:.8,movable:!0,rotatable:!0,scalable:!0,zoomable:!0,zoomOnTouch:!0,zoomOnWheel:!0,wheelZoomRatio:.1,cropBoxMovable:!0,cropBoxResizable:!0,toggleDragModeOnDblclick:!0,minCanvasWidth:0,minCanvasHeight:0,minCropBoxWidth:0,minCropBoxHeight:0,minContainerWidth:200,minContainerHeight:100,ready:null,cropstart:null,cropmove:null,cropend:null,crop:null,zoom:null},e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q=function(){function a(t,i){for(var e=0;e<i.length;e++){var a=i[e];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(t,i,e){return i&&a(t.prototype,i),e&&a(t,e),t}}(),ft=function(t){if(Array.isArray(t)){for(var i=0,e=Array(t.length);i<t.length;i++)e[i]=t[i];return e}return Array.from(t)},$=Number.isNaN||r.isNaN;function _(t){return"number"==typeof t&&!$(t)}function F(t){return void 0===t}function Z(t){return"object"===(void 0===t?"undefined":e(t))&&null!==t}var K=Object.prototype.hasOwnProperty;function V(t){if(!Z(t))return!1;try{var i=t.constructor,e=i.prototype;return i&&e&&K.call(e,"isPrototypeOf")}catch(t){return!1}}function G(t){return"function"==typeof t}function J(i,e){if(i&&G(e))if(Array.isArray(i)||_(i.length)){var t=i.length,a=void 0;for(a=0;a<t&&!1!==e.call(i,i[a],a,i);a+=1);}else Z(i)&&Object.keys(i).forEach(function(t){e.call(i,i[t],t,i)});return i}var tt=Object.assign||function(e){for(var t=arguments.length,i=Array(1<t?t-1:0),a=1;a<t;a++)i[a-1]=arguments[a];return Z(e)&&0<i.length&&i.forEach(function(i){Z(i)&&Object.keys(i).forEach(function(t){e[t]=i[t]})}),e},it=/\.\d*(?:0|9){12}\d*$/i;function vt(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1e11;return it.test(t)?Math.round(t*i)/i:t}var et=/^(?:width|height|left|top|marginLeft|marginTop)$/;function at(t,i){var e=t.style;J(i,function(t,i){et.test(i)&&_(t)&&(t+="px"),e[i]=t})}function nt(t,i){if(i)if(_(t.length))J(t,function(t){nt(t,i)});else if(t.classList)t.classList.add(i);else{var e=t.className.trim();e?e.indexOf(i)<0&&(t.className=e+" "+i):t.className=i}}function ot(t,i){i&&(_(t.length)?J(t,function(t){ot(t,i)}):t.classList?t.classList.remove(i):0<=t.className.indexOf(i)&&(t.className=t.className.replace(i,"")))}function ht(t,i,e){i&&(_(t.length)?J(t,function(t){ht(t,i,e)}):e?nt(t,i):ot(t,i))}var rt=/([a-z\d])([A-Z])/g;function st(t){return t.replace(rt,"$1-$2").toLowerCase()}function dt(t,i){return Z(t[i])?t[i]:t.dataset?t.dataset[i]:t.getAttribute("data-"+st(i))}function ct(t,i,e){Z(e)?t[i]=e:t.dataset?t.dataset[i]=e:t.setAttribute("data-"+st(i),e)}function lt(i,e){if(Z(i[e]))try{delete i[e]}catch(t){i[e]=void 0}else if(i.dataset)try{delete i.dataset[e]}catch(t){i.dataset[e]=void 0}else i.removeAttribute("data-"+st(e))}var pt=/\s\s*/;function mt(i,t,e){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};J(t.trim().split(pt),function(t){i.removeEventListener(t,e,a)})}function ut(a,n,o){var h=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};if(h.once){var r=o;o=function(){for(var t=arguments.length,i=Array(t),e=0;e<t;e++)i[e]=arguments[e];return mt(a,n,o,h),r.apply(a,i)}}J(n.trim().split(pt),function(t){a.addEventListener(t,o,h)})}function gt(t,i,e){var a=void 0;return G(Event)&&G(CustomEvent)?a=new CustomEvent(i,{detail:e,bubbles:!0,cancelable:!0}):(a=document.createEvent("CustomEvent")).initCustomEvent(i,!0,!0,e),t.dispatchEvent(a)}function wt(t){var i=t.getBoundingClientRect();return{left:i.left+(window.pageXOffset-document.documentElement.clientLeft),top:i.top+(window.pageYOffset-document.documentElement.clientTop)}}var xt=r.location,bt=/^(https?:)\/\/([^:/?#]+):?(\d*)/i;function yt(t){var i=t.match(bt);return i&&(i[1]!==xt.protocol||i[2]!==xt.hostname||i[3]!==xt.port)}function Mt(t){var i="timestamp="+(new Date).getTime();return t+(-1===t.indexOf("?")?"?":"&")+i}function Ct(t){var i=t.rotate,e=t.scaleX,a=t.scaleY,n=t.translateX,o=t.translateY,h=[];_(n)&&0!==n&&h.push("translateX("+n+"px)"),_(o)&&0!==o&&h.push("translateY("+o+"px)"),_(i)&&0!==i&&h.push("rotate("+i+"deg)"),_(e)&&1!==e&&h.push("scaleX("+e+")"),_(a)&&1!==a&&h.push("scaleY("+a+")");var r=h.length?h.join(" "):"none";return{WebkitTransform:r,msTransform:r,transform:r}}function Dt(t,i){var e=t.pageX,a=t.pageY,n={endX:e,endY:a};return i?n:tt({startX:e,startY:a},n)}var Bt=Number.isFinite||r.isFinite;function kt(t){var i=t.aspectRatio,e=t.height,a=t.width,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"contain",o=function(t){return Bt(t)&&0<t};if(o(a)&&o(e)){var h=e*i;"contain"===n&&a<h||"cover"===n&&h<a?e=a/i:a=e*i}else o(a)?e=a/i:o(e)&&(a=e*i);return{width:a,height:e}}var Tt=String.fromCharCode;var Wt=/^data:.*,/;function Ht(t){var i=new DataView(t),e=void 0,a=void 0,n=void 0,o=void 0;if(255===i.getUint8(0)&&216===i.getUint8(1))for(var h=i.byteLength,r=2;r<h;){if(255===i.getUint8(r)&&225===i.getUint8(r+1)){n=r;break}r+=1}if(n){var s=n+10;if("Exif"===function(t,i,e){var a="",n=void 0;for(e+=i,n=i;n<e;n+=1)a+=Tt(t.getUint8(n));return a}(i,n+4,4)){var d=i.getUint16(s);if(((a=18761===d)||19789===d)&&42===i.getUint16(s+2,a)){var c=i.getUint32(s+4,a);8<=c&&(o=s+c)}}}if(o){var l=i.getUint16(o,a),p=void 0,m=void 0;for(m=0;m<l;m+=1)if(p=o+12*m+2,274===i.getUint16(p,a)){p+=8,e=i.getUint16(p,a),i.setUint16(p,1,a);break}}return e}var Nt={render:function(){this.initContainer(),this.initCanvas(),this.initCropBox(),this.renderCanvas(),this.cropped&&this.renderCropBox()},initContainer:function(){var t=this.element,i=this.options,e=this.container,a=this.cropper;nt(a,S),ot(t,S);var n={width:Math.max(e.offsetWidth,Number(i.minContainerWidth)||200),height:Math.max(e.offsetHeight,Number(i.minContainerHeight)||100)};at(a,{width:(this.containerData=n).width,height:n.height}),nt(t,S),ot(a,S)},initCanvas:function(){var t=this.containerData,i=this.imageData,e=this.options.viewMode,a=Math.abs(i.rotate)%180==90,n=a?i.naturalHeight:i.naturalWidth,o=a?i.naturalWidth:i.naturalHeight,h=n/o,r=t.width,s=t.height;t.height*h>t.width?3===e?r=t.height*h:s=t.width/h:3===e?s=t.width/h:r=t.height*h;var d={aspectRatio:h,naturalWidth:n,naturalHeight:o,width:r,height:s};d.left=(t.width-r)/2,d.top=(t.height-s)/2,d.oldLeft=d.left,d.oldTop=d.top,this.canvasData=d,this.limited=1===e||2===e,this.limitCanvas(!0,!0),this.initialImageData=tt({},i),this.initialCanvasData=tt({},d)},limitCanvas:function(t,i){var e=this.options,a=this.containerData,n=this.canvasData,o=this.cropBoxData,h=e.viewMode,r=n.aspectRatio,s=this.cropped&&o;if(t){var d=Number(e.minCanvasWidth)||0,c=Number(e.minCanvasHeight)||0;1<h?(d=Math.max(d,a.width),c=Math.max(c,a.height),3===h&&(d<c*r?d=c*r:c=d/r)):0<h&&(d?d=Math.max(d,s?o.width:0):c?c=Math.max(c,s?o.height:0):s&&((d=o.width)<(c=o.height)*r?d=c*r:c=d/r));var l=kt({aspectRatio:r,width:d,height:c});d=l.width,c=l.height,n.minWidth=d,n.minHeight=c,n.maxWidth=1/0,n.maxHeight=1/0}if(i)if(h){var p=a.width-n.width,m=a.height-n.height;n.minLeft=Math.min(0,p),n.minTop=Math.min(0,m),n.maxLeft=Math.max(0,p),n.maxTop=Math.max(0,m),s&&this.limited&&(n.minLeft=Math.min(o.left,o.left+(o.width-n.width)),n.minTop=Math.min(o.top,o.top+(o.height-n.height)),n.maxLeft=o.left,n.maxTop=o.top,2===h&&(n.width>=a.width&&(n.minLeft=Math.min(0,p),n.maxLeft=Math.max(0,p)),n.height>=a.height&&(n.minTop=Math.min(0,m),n.maxTop=Math.max(0,m))))}else n.minLeft=-n.width,n.minTop=-n.height,n.maxLeft=a.width,n.maxTop=a.height},renderCanvas:function(t,i){var e=this.canvasData,a=this.imageData;if(i){var n=function(t){var i=t.width,e=t.height,a=t.degree;if(90==(a=Math.abs(a)%180))return{width:e,height:i};var n=a%90*Math.PI/180,o=Math.sin(n),h=Math.cos(n),r=i*h+e*o,s=i*o+e*h;return 90<a?{width:s,height:r}:{width:r,height:s}}({width:a.naturalWidth*Math.abs(a.scaleX||1),height:a.naturalHeight*Math.abs(a.scaleY||1),degree:a.rotate||0}),o=n.width,h=n.height,r=e.width*(o/e.naturalWidth),s=e.height*(h/e.naturalHeight);e.left-=(r-e.width)/2,e.top-=(s-e.height)/2,e.width=r,e.height=s,e.aspectRatio=o/h,e.naturalWidth=o,e.naturalHeight=h,this.limitCanvas(!0,!1)}(e.width>e.maxWidth||e.width<e.minWidth)&&(e.left=e.oldLeft),(e.height>e.maxHeight||e.height<e.minHeight)&&(e.top=e.oldTop),e.width=Math.min(Math.max(e.width,e.minWidth),e.maxWidth),e.height=Math.min(Math.max(e.height,e.minHeight),e.maxHeight),this.limitCanvas(!1,!0),e.left=Math.min(Math.max(e.left,e.minLeft),e.maxLeft),e.top=Math.min(Math.max(e.top,e.minTop),e.maxTop),e.oldLeft=e.left,e.oldTop=e.top,at(this.canvas,tt({width:e.width,height:e.height},Ct({translateX:e.left,translateY:e.top}))),this.renderImage(t),this.cropped&&this.limited&&this.limitCropBox(!0,!0)},renderImage:function(t){var i=this.canvasData,e=this.imageData,a=e.naturalWidth*(i.width/i.naturalWidth),n=e.naturalHeight*(i.height/i.naturalHeight);tt(e,{width:a,height:n,left:(i.width-a)/2,top:(i.height-n)/2}),at(this.image,tt({width:e.width,height:e.height},Ct(tt({translateX:e.left,translateY:e.top},e)))),t&&this.output()},initCropBox:function(){var t=this.options,i=this.canvasData,e=t.aspectRatio,a=Number(t.autoCropArea)||.8,n={width:i.width,height:i.height};e&&(i.height*e>i.width?n.height=n.width/e:n.width=n.height*e),this.cropBoxData=n,this.limitCropBox(!0,!0),n.width=Math.min(Math.max(n.width,n.minWidth),n.maxWidth),n.height=Math.min(Math.max(n.height,n.minHeight),n.maxHeight),n.width=Math.max(n.minWidth,n.width*a),n.height=Math.max(n.minHeight,n.height*a),n.left=i.left+(i.width-n.width)/2,n.top=i.top+(i.height-n.height)/2,n.oldLeft=n.left,n.oldTop=n.top,this.initialCropBoxData=tt({},n)},limitCropBox:function(t,i){var e=this.options,a=this.containerData,n=this.canvasData,o=this.cropBoxData,h=this.limited,r=e.aspectRatio;if(t){var s=Number(e.minCropBoxWidth)||0,d=Number(e.minCropBoxHeight)||0,c=Math.min(a.width,h?n.width:a.width),l=Math.min(a.height,h?n.height:a.height);s=Math.min(s,a.width),d=Math.min(d,a.height),r&&(s&&d?s<d*r?d=s/r:s=d*r:s?d=s/r:d&&(s=d*r),c<l*r?l=c/r:c=l*r),o.minWidth=Math.min(s,c),o.minHeight=Math.min(d,l),o.maxWidth=c,o.maxHeight=l}i&&(o.maxTop=h?(o.minLeft=Math.max(0,n.left),o.minTop=Math.max(0,n.top),o.maxLeft=Math.min(a.width,n.left+n.width)-o.width,Math.min(a.height,n.top+n.height)-o.height):(o.minLeft=0,o.minTop=0,o.maxLeft=a.width-o.width,a.height-o.height))},renderCropBox:function(){var t=this.options,i=this.containerData,e=this.cropBoxData;(e.width>e.maxWidth||e.width<e.minWidth)&&(e.left=e.oldLeft),(e.height>e.maxHeight||e.height<e.minHeight)&&(e.top=e.oldTop),e.width=Math.min(Math.max(e.width,e.minWidth),e.maxWidth),e.height=Math.min(Math.max(e.height,e.minHeight),e.maxHeight),this.limitCropBox(!1,!0),e.left=Math.min(Math.max(e.left,e.minLeft),e.maxLeft),e.top=Math.min(Math.max(e.top,e.minTop),e.maxTop),e.oldLeft=e.left,e.oldTop=e.top,t.movable&&t.cropBoxMovable&&ct(this.face,m,e.width>=i.width&&e.height>=i.height?W:k),at(this.cropBox,tt({width:e.width,height:e.height},Ct({translateX:e.left,translateY:e.top}))),this.cropped&&this.limited&&this.limitCanvas(!0,!0),this.disabled||this.output()},output:function(){this.preview(),gt(this.element,a,this.getData())}},Et={initPreview:function(){var e=this.crossOrigin,t=this.options.preview,a=e?this.crossOriginUrl:this.url,i=document.createElement("img");if(e&&(i.crossOrigin=e),i.src=a,this.viewBox.appendChild(i),this.viewBoxImage=i,t){var n=t;"string"==typeof t?n=this.element.ownerDocument.querySelectorAll(t):t.querySelector&&(n=[t]),J(this.previews=n,function(t){var i=document.createElement("img");ct(t,u,{width:t.offsetWidth,height:t.offsetHeight,html:t.innerHTML}),e&&(i.crossOrigin=e),i.src=a,i.style.cssText='display:block;width:100%;height:auto;min-width:0!important;min-height:0!important;max-width:none!important;max-height:none!important;image-orientation:0deg!important;"',t.innerHTML="",t.appendChild(i)})}},resetPreview:function(){J(this.previews,function(t){var i=dt(t,u);at(t,{width:i.width,height:i.height}),t.innerHTML=i.html,lt(t,u)})},preview:function(){var r=this.imageData,t=this.canvasData,i=this.cropBoxData,s=i.width,d=i.height,c=r.width,l=r.height,p=i.left-t.left-r.left,m=i.top-t.top-r.top;this.cropped&&!this.disabled&&(at(this.viewBoxImage,tt({width:c,height:l},Ct(tt({translateX:-p,translateY:-m},r)))),J(this.previews,function(t){var i=dt(t,u),e=i.width,a=i.height,n=e,o=a,h=1;s&&(o=d*(h=e/s)),d&&a<o&&(n=s*(h=a/d),o=a),at(t,{width:n,height:o}),at(t.getElementsByTagName("img")[0],tt({width:c*h,height:l*h},Ct(tt({translateX:-p*h,translateY:-m*h},r))))}))}},zt={bind:function(){var t=this.element,i=this.options,e=this.cropper;G(i.cropstart)&&ut(t,v,i.cropstart),G(i.cropmove)&&ut(t,f,i.cropmove),G(i.cropend)&&ut(t,o,i.cropend),G(i.crop)&&ut(t,a,i.crop),G(i.zoom)&&ut(t,A,i.zoom),ut(e,b,this.onCropStart=this.cropStart.bind(this)),i.zoomable&&i.zoomOnWheel&&ut(e,B,this.onWheel=this.wheel.bind(this)),i.toggleDragModeOnDblclick&&ut(e,w,this.onDblclick=this.dblclick.bind(this)),ut(t.ownerDocument,y,this.onCropMove=this.cropMove.bind(this)),ut(t.ownerDocument,M,this.onCropEnd=this.cropEnd.bind(this)),i.responsive&&ut(window,D,this.onResize=this.resize.bind(this))},unbind:function(){var t=this.element,i=this.options,e=this.cropper;G(i.cropstart)&&mt(t,v,i.cropstart),G(i.cropmove)&&mt(t,f,i.cropmove),G(i.cropend)&&mt(t,o,i.cropend),G(i.crop)&&mt(t,a,i.crop),G(i.zoom)&&mt(t,A,i.zoom),mt(e,b,this.onCropStart),i.zoomable&&i.zoomOnWheel&&mt(e,B,this.onWheel),i.toggleDragModeOnDblclick&&mt(e,w,this.onDblclick),mt(t.ownerDocument,y,this.onCropMove),mt(t.ownerDocument,M,this.onCropEnd),i.responsive&&mt(window,D,this.onResize)}},Lt={resize:function(){var t=this.options,i=this.container,e=this.containerData,a=Number(t.minContainerWidth)||200,n=Number(t.minContainerHeight)||100;if(!(this.disabled||e.width<=a||e.height<=n)){var o=i.offsetWidth/e.width;if(1!==o||i.offsetHeight!==e.height){var h=void 0,r=void 0;t.restore&&(h=this.getCanvasData(),r=this.getCropBoxData()),this.render(),t.restore&&(this.setCanvasData(J(h,function(t,i){h[i]=t*o})),this.setCropBoxData(J(r,function(t,i){r[i]=t*o})))}}},dblclick:function(){var t,i;this.disabled||this.options.dragMode===g||this.setDragMode((t=this.dragBox,i=h,(t.classList?t.classList.contains(i):-1<t.className.indexOf(i))?d:s))},wheel:function(t){var i=this,e=Number(this.options.wheelZoomRatio)||.1,a=1;this.disabled||(t.preventDefault(),this.wheeling||(this.wheeling=!0,setTimeout(function(){i.wheeling=!1},50),t.deltaY?a=0<t.deltaY?1:-1:t.wheelDelta?a=-t.wheelDelta/120:t.detail&&(a=0<t.detail?1:-1),this.zoom(-a*e,t)))},cropStart:function(t){if(!this.disabled){var i=this.options,e=this.pointers,a=void 0;t.changedTouches?J(t.changedTouches,function(t){e[t.identifier]=Dt(t)}):e[t.pointerId||0]=Dt(t),a=1<Object.keys(e).length&&i.zoomable&&i.zoomOnTouch?H:dt(t.target,m),I.test(a)&&!1!==gt(this.element,v,{originalEvent:t,action:a})&&(t.preventDefault(),this.action=a,this.cropping=!1,a===T&&(this.cropping=!0,nt(this.dragBox,n)))}},cropMove:function(t){var i=this.action;if(!this.disabled&&i){var e=this.pointers;t.preventDefault(),!1!==gt(this.element,f,{originalEvent:t,action:i})&&(t.changedTouches?J(t.changedTouches,function(t){tt(e[t.identifier],Dt(t,!0))}):tt(e[t.pointerId||0],Dt(t,!0)),this.change(t))}},cropEnd:function(t){if(!this.disabled){var i=this.action,e=this.pointers;t.changedTouches?J(t.changedTouches,function(t){delete e[t.identifier]}):delete e[t.pointerId||0],i&&(t.preventDefault(),Object.keys(e).length||(this.action=""),this.cropping&&(this.cropping=!1,ht(this.dragBox,n,this.cropped&&this.options.modal)),gt(this.element,o,{originalEvent:t,action:i}))}}},Yt={change:function(t){var i=this.options,e=this.canvasData,a=this.containerData,n=this.cropBoxData,o=this.pointers,h=this.action,r=i.aspectRatio,s=n.left,d=n.top,c=n.width,l=n.height,p=s+c,m=d+l,u=0,g=0,f=a.width,v=a.height,w=!0,x=void 0;!r&&t.shiftKey&&(r=c&&l?c/l:1),this.limited&&(u=n.minLeft,g=n.minTop,f=u+Math.min(a.width,e.width,e.left+e.width),v=g+Math.min(a.height,e.height,e.top+e.height));var b,y,M,C=o[Object.keys(o)[0]],D={x:C.endX-C.startX,y:C.endY-C.startY},B=function(t){switch(t){case N:p+D.x>f&&(D.x=f-p);break;case E:s+D.x<u&&(D.x=u-s);break;case L:d+D.y<g&&(D.y=g-d);break;case z:m+D.y>v&&(D.y=v-m)}};switch(h){case k:s+=D.x,d+=D.y;break;case N:if(0<=D.x&&(f<=p||r&&(d<=g||v<=m))){w=!1;break}B(N),c+=D.x,r&&(l=c/r,d-=D.x/r/2),c<0&&(h=E,c=0);break;case L:if(D.y<=0&&(d<=g||r&&(s<=u||f<=p))){w=!1;break}B(L),l-=D.y,d+=D.y,r&&(c=l*r,s+=D.y*r/2),l<0&&(h=z,l=0);break;case E:if(D.x<=0&&(s<=u||r&&(d<=g||v<=m))){w=!1;break}B(E),c-=D.x,s+=D.x,r&&(l=c/r,d+=D.x/r/2),c<0&&(h=N,c=0);break;case z:if(0<=D.y&&(v<=m||r&&(s<=u||f<=p))){w=!1;break}B(z),l+=D.y,r&&(c=l*r,s-=D.y*r/2),l<0&&(h=L,l=0);break;case Y:if(r){if(D.y<=0&&(d<=g||f<=p)){w=!1;break}B(L),l-=D.y,d+=D.y,c=l*r}else B(L),B(N),0<=D.x?p<f?c+=D.x:D.y<=0&&d<=g&&(w=!1):c+=D.x,D.y<=0?g<d&&(l-=D.y,d+=D.y):(l-=D.y,d+=D.y);c<0&&l<0?(h=R,c=l=0):c<0?(h=O,c=0):l<0&&(h=X,l=0);break;case O:if(r){if(D.y<=0&&(d<=g||s<=u)){w=!1;break}B(L),l-=D.y,d+=D.y,c=l*r,s+=D.y*r}else B(L),B(E),D.x<=0?u<s?(c-=D.x,s+=D.x):D.y<=0&&d<=g&&(w=!1):(c-=D.x,s+=D.x),D.y<=0?g<d&&(l-=D.y,d+=D.y):(l-=D.y,d+=D.y);c<0&&l<0?(h=X,c=l=0):c<0?(h=Y,c=0):l<0&&(h=R,l=0);break;case R:if(r){if(D.x<=0&&(s<=u||v<=m)){w=!1;break}B(E),c-=D.x,s+=D.x,l=c/r}else B(z),B(E),D.x<=0?u<s?(c-=D.x,s+=D.x):0<=D.y&&v<=m&&(w=!1):(c-=D.x,s+=D.x),0<=D.y?m<v&&(l+=D.y):l+=D.y;c<0&&l<0?(h=Y,c=l=0):c<0?(h=X,c=0):l<0&&(h=O,l=0);break;case X:if(r){if(0<=D.x&&(f<=p||v<=m)){w=!1;break}B(N),l=(c+=D.x)/r}else B(z),B(N),0<=D.x?p<f?c+=D.x:0<=D.y&&v<=m&&(w=!1):c+=D.x,0<=D.y?m<v&&(l+=D.y):l+=D.y;c<0&&l<0?(h=O,c=l=0):c<0?(h=R,c=0):l<0&&(h=Y,l=0);break;case W:this.move(D.x,D.y),w=!1;break;case H:this.zoom((y=tt({},b=o),M=[],J(b,function(r,t){delete y[t],J(y,function(t){var i=Math.abs(r.startX-t.startX),e=Math.abs(r.startY-t.startY),a=Math.abs(r.endX-t.endX),n=Math.abs(r.endY-t.endY),o=Math.sqrt(i*i+e*e),h=(Math.sqrt(a*a+n*n)-o)/o;M.push(h)})}),M.sort(function(t,i){return Math.abs(t)<Math.abs(i)}),M[0]),t),w=!1;break;case T:if(!D.x||!D.y){w=!1;break}x=wt(this.cropper),s=C.startX-x.left,d=C.startY-x.top,c=n.minWidth,l=n.minHeight,0<D.x?h=0<D.y?X:Y:D.x<0&&(s-=c,h=0<D.y?R:O),D.y<0&&(d-=l),this.cropped||(ot(this.cropBox,S),this.cropped=!0,this.limited&&this.limitCropBox(!0,!0))}w&&(n.width=c,n.height=l,n.left=s,n.top=d,this.action=h,this.renderCropBox()),J(o,function(t){t.startX=t.endX,t.startY=t.endY})}},Ot={crop:function(){return!this.ready||this.cropped||this.disabled||(this.cropped=!0,this.limitCropBox(!0,!0),this.options.modal&&nt(this.dragBox,n),ot(this.cropBox,S),this.setCropBoxData(this.initialCropBoxData)),this},reset:function(){return this.ready&&!this.disabled&&(this.imageData=tt({},this.initialImageData),this.canvasData=tt({},this.initialCanvasData),this.cropBoxData=tt({},this.initialCropBoxData),this.renderCanvas(),this.cropped&&this.renderCropBox()),this},clear:function(){return this.cropped&&!this.disabled&&(tt(this.cropBoxData,{left:0,top:0,width:0,height:0}),this.cropped=!1,this.renderCropBox(),this.limitCanvas(!0,!0),this.renderCanvas(),ot(this.dragBox,n),nt(this.cropBox,S)),this},replace:function(i){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return!this.disabled&&i&&(this.isImg&&(this.element.src=i),t?(this.url=i,this.image.src=i,this.ready&&(this.viewBoxImage.src=i,J(this.previews,function(t){t.getElementsByTagName("img")[0].src=i}))):(this.isImg&&(this.replaced=!0),this.options.data=null,this.uncreate(),this.load(i))),this},enable:function(){return this.ready&&this.disabled&&(this.disabled=!1,ot(this.cropper,i)),this},disable:function(){return this.ready&&!this.disabled&&(this.disabled=!0,nt(this.cropper,i)),this},destroy:function(){var t=this.element;return dt(t,c)&&(this.isImg&&this.replaced&&(t.src=this.originalUrl),this.uncreate(),lt(t,c)),this},move:function(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:t,e=this.canvasData,a=e.left,n=e.top;return this.moveTo(F(t)?t:a+Number(t),F(i)?i:n+Number(i))},moveTo:function(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:t,e=this.canvasData,a=!1;return t=Number(t),i=Number(i),this.ready&&!this.disabled&&this.options.movable&&(_(t)&&(e.left=t,a=!0),_(i)&&(e.top=i,a=!0),a&&this.renderCanvas(!0)),this},zoom:function(t,i){var e=this.canvasData;return t=(t=Number(t))<0?1/(1-t):1+t,this.zoomTo(e.width*t/e.naturalWidth,null,i)},zoomTo:function(t,i,e){var a,n,o,h=this.options,r=this.canvasData,s=r.width,d=r.height,c=r.naturalWidth,l=r.naturalHeight;if(0<=(t=Number(t))&&this.ready&&!this.disabled&&h.zoomable){var p=c*t,m=l*t;if(!1===gt(this.element,A,{originalEvent:e,oldRatio:s/c,ratio:p/c}))return this;if(e){var u=this.pointers,g=wt(this.cropper),f=u&&Object.keys(u).length?(o=n=a=0,J(u,function(t){var i=t.startX,e=t.startY;a+=i,n+=e,o+=1}),{pageX:a/=o,pageY:n/=o}):{pageX:e.pageX,pageY:e.pageY};r.left-=(p-s)*((f.pageX-g.left-r.left)/s),r.top-=(m-d)*((f.pageY-g.top-r.top)/d)}else V(i)&&_(i.x)&&_(i.y)?(r.left-=(p-s)*((i.x-r.left)/s),r.top-=(m-d)*((i.y-r.top)/d)):(r.left-=(p-s)/2,r.top-=(m-d)/2);r.width=p,r.height=m,this.renderCanvas(!0)}return this},rotate:function(t){return this.rotateTo((this.imageData.rotate||0)+Number(t))},rotateTo:function(t){return _(t=Number(t))&&this.ready&&!this.disabled&&this.options.rotatable&&(this.imageData.rotate=t%360,this.renderCanvas(!0,!0)),this},scaleX:function(t){var i=this.imageData.scaleY;return this.scale(t,_(i)?i:1)},scaleY:function(t){var i=this.imageData.scaleX;return this.scale(_(i)?i:1,t)},scale:function(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:t,e=this.imageData,a=!1;return t=Number(t),i=Number(i),this.ready&&!this.disabled&&this.options.scalable&&(_(t)&&(e.scaleX=t,a=!0),_(i)&&(e.scaleY=i,a=!0),a&&this.renderCanvas(!0,!0)),this},getData:function(){var e=0<arguments.length&&void 0!==arguments[0]&&arguments[0],t=this.options,i=this.imageData,a=this.canvasData,n=this.cropBoxData,o=void 0;if(this.ready&&this.cropped){o={x:n.left-a.left,y:n.top-a.top,width:n.width,height:n.height};var h=i.width/i.naturalWidth;J(o,function(t,i){t/=h,o[i]=e?Math.round(t):t})}else o={x:0,y:0,width:0,height:0};return t.rotatable&&(o.rotate=i.rotate||0),t.scalable&&(o.scaleX=i.scaleX||1,o.scaleY=i.scaleY||1),o},setData:function(t){var i=this.options,e=this.imageData,a=this.canvasData,n={};if(this.ready&&!this.disabled&&V(t)){var o=!1;i.rotatable&&_(t.rotate)&&t.rotate!==e.rotate&&(e.rotate=t.rotate,o=!0),i.scalable&&(_(t.scaleX)&&t.scaleX!==e.scaleX&&(e.scaleX=t.scaleX,o=!0),_(t.scaleY)&&t.scaleY!==e.scaleY&&(e.scaleY=t.scaleY,o=!0)),o&&this.renderCanvas(!0,!0);var h=e.width/e.naturalWidth;_(t.x)&&(n.left=t.x*h+a.left),_(t.y)&&(n.top=t.y*h+a.top),_(t.width)&&(n.width=t.width*h),_(t.height)&&(n.height=t.height*h),this.setCropBoxData(n)}return this},getContainerData:function(){return this.ready?tt({},this.containerData):{}},getImageData:function(){return this.sized?tt({},this.imageData):{}},getCanvasData:function(){var i=this.canvasData,e={};return this.ready&&J(["left","top","width","height","naturalWidth","naturalHeight"],function(t){e[t]=i[t]}),e},setCanvasData:function(t){var i=this.canvasData,e=i.aspectRatio;return this.ready&&!this.disabled&&V(t)&&(_(t.left)&&(i.left=t.left),_(t.top)&&(i.top=t.top),_(t.width)?(i.width=t.width,i.height=t.width/e):_(t.height)&&(i.height=t.height,i.width=t.height*e),this.renderCanvas(!0)),this},getCropBoxData:function(){var t=this.cropBoxData,i=void 0;return this.ready&&this.cropped&&(i={left:t.left,top:t.top,width:t.width,height:t.height}),i||{}},setCropBoxData:function(t){var i=this.cropBoxData,e=this.options.aspectRatio,a=void 0,n=void 0;return this.ready&&this.cropped&&!this.disabled&&V(t)&&(_(t.left)&&(i.left=t.left),_(t.top)&&(i.top=t.top),_(t.width)&&t.width!==i.width&&(a=!0,i.width=t.width),_(t.height)&&t.height!==i.height&&(n=!0,i.height=t.height),e&&(a?i.height=i.width/e:n&&(i.width=i.height*e)),this.renderCropBox()),this},getCroppedCanvas:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(!this.ready||!window.HTMLCanvasElement)return null;var i,e,a,n,o,h,r,s,d,c,l,p,m,u,g,f,v,w,x,b,y,M,C,D,B,k,T,W,H,N,E,z,L,Y,O,X,R,S,A=this.canvasData,I=(i=this.image,e=this.imageData,a=A,n=t,o=e.naturalWidth,h=e.naturalHeight,r=e.rotate,s=void 0===r?0:r,d=e.scaleX,c=void 0===d?1:d,l=e.scaleY,p=void 0===l?1:l,m=a.aspectRatio,u=a.naturalWidth,g=a.naturalHeight,f=n.fillColor,v=void 0===f?"transparent":f,w=n.imageSmoothingEnabled,x=void 0===w||w,b=n.imageSmoothingQuality,y=void 0===b?"low":b,M=n.maxWidth,C=void 0===M?1/0:M,D=n.maxHeight,B=void 0===D?1/0:D,k=n.minWidth,T=void 0===k?0:k,W=n.minHeight,H=void 0===W?0:W,N=document.createElement("canvas"),E=N.getContext("2d"),z=kt({aspectRatio:m,width:C,height:B}),L=kt({aspectRatio:m,width:T,height:H},"cover"),Y=Math.min(z.width,Math.max(L.width,u)),O=Math.min(z.height,Math.max(L.height,g)),X=Math.min(z.width,Math.max(L.width,o)),R=Math.min(z.height,Math.max(L.height,h)),S=[-X/2,-R/2,X,R],N.width=vt(Y),N.height=vt(O),E.fillStyle=v,E.fillRect(0,0,Y,O),E.save(),E.translate(Y/2,O/2),E.rotate(s*Math.PI/180),E.scale(c,p),E.imageSmoothingEnabled=x,E.imageSmoothingQuality=y,E.drawImage.apply(E,[i].concat(ft(S.map(function(t){return Math.floor(vt(t))})))),E.restore(),N);if(!this.cropped)return I;var j=this.getData(),U=j.x,P=j.y,q=j.width,Q=j.height,$=I.width/Math.floor(A.naturalWidth);1!==$&&(U*=$,P*=$,q*=$,Q*=$);var _=q/Q,F=kt({aspectRatio:_,width:t.maxWidth||1/0,height:t.maxHeight||1/0}),Z=kt({aspectRatio:_,width:t.minWidth||0,height:t.minHeight||0},"cover"),K=kt({aspectRatio:_,width:t.width||(1!==$?I.width:q),height:t.height||(1!==$?I.height:Q)}),V=K.width,G=K.height;V=Math.min(F.width,Math.max(Z.width,V)),G=Math.min(F.height,Math.max(Z.height,G));var J=document.createElement("canvas"),tt=J.getContext("2d");J.width=vt(V),J.height=vt(G),tt.fillStyle=t.fillColor||"transparent",tt.fillRect(0,0,V,G);var it=t.imageSmoothingEnabled,et=void 0===it||it,at=t.imageSmoothingQuality;tt.imageSmoothingEnabled=et,at&&(tt.imageSmoothingQuality=at);var nt=I.width,ot=I.height,ht=U,rt=P,st=void 0,dt=void 0,ct=void 0,lt=void 0,pt=void 0,mt=void 0;ht<=-q||nt<ht?pt=ct=st=ht=0:ht<=0?(ct=-ht,ht=0,pt=st=Math.min(nt,q+ht)):ht<=nt&&(ct=0,pt=st=Math.min(q,nt-ht)),st<=0||rt<=-Q||ot<rt?mt=lt=dt=rt=0:rt<=0?(lt=-rt,rt=0,mt=dt=Math.min(ot,Q+rt)):rt<=ot&&(lt=0,mt=dt=Math.min(Q,ot-rt));var ut=[ht,rt,st,dt];if(0<pt&&0<mt){var gt=V/q;ut.push(ct*gt,lt*gt,pt*gt,mt*gt)}return tt.drawImage.apply(tt,[I].concat(ft(ut.map(function(t){return Math.floor(vt(t))})))),J},setAspectRatio:function(t){var i=this.options;return this.disabled||F(t)||(i.aspectRatio=Math.max(0,t)||NaN,this.ready&&(this.initCropBox(),this.cropped&&this.renderCropBox())),this},setDragMode:function(t){var i=this.options,e=this.dragBox,a=this.face;if(this.ready&&!this.disabled){var n=t===s,o=i.movable&&t===d;t=n||o?t:g,i.dragMode=t,ct(e,m,t),ht(e,h,n),ht(e,p,o),i.cropBoxMovable||(ct(a,m,t),ht(a,h,n),ht(a,p,o))}return this}},Xt=r.Cropper,Rt=function(){function e(t){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}(this,e),!t||!P.test(t.tagName))throw new Error("The first argument is required and must be an <img> or <canvas> element.");this.element=t,this.options=tt({},q,V(i)&&i),this.cropped=!1,this.disabled=!1,this.pointers={},this.ready=!1,this.reloading=!1,this.replaced=!1,this.sized=!1,this.sizing=!1,this.init()}return Q(e,[{key:"init",value:function(){var t=this.element,i=t.tagName.toLowerCase(),e=void 0;if(!dt(t,c)){if(ct(t,c,this),"img"===i){if(this.isImg=!0,e=t.getAttribute("src")||"",!(this.originalUrl=e))return;e=t.src}else"canvas"===i&&window.HTMLCanvasElement&&(e=t.toDataURL());this.load(e)}}},{key:"load",value:function(t){var i=this;if(t){this.url=t,this.imageData={};var e=this.element,a=this.options;if(a.checkOrientation&&window.ArrayBuffer)if(j.test(t))U.test(t)?this.read((n=t.replace(Wt,""),o=atob(n),h=new ArrayBuffer(o.length),J(r=new Uint8Array(h),function(t,i){r[i]=o.charCodeAt(i)}),h)):this.clone();else{var n,o,h,r,s=new XMLHttpRequest;this.reloading=!0,this.xhr=s;var d=function(){i.reloading=!1,i.xhr=null};s.ontimeout=d,s.onabort=d,s.onerror=function(){d(),i.clone()},s.onload=function(){d(),i.read(s.response)},a.checkCrossOrigin&&yt(t)&&e.crossOrigin&&(t=Mt(t)),s.open("get",t),s.responseType="arraybuffer",s.withCredentials="use-credentials"===e.crossOrigin,s.send()}else this.clone()}}},{key:"read",value:function(t){var i,e,a,n=this.options,o=this.imageData,h=Ht(t),r=0,s=1,d=1;if(1<h){this.url=(i="image/jpeg",e=new Uint8Array(t),a="",J(e,function(t){a+=Tt(t)}),"data:"+i+";base64,"+btoa(a));var c=function(t){var i=0,e=1,a=1;switch(t){case 2:e=-1;break;case 3:i=-180;break;case 4:a=-1;break;case 5:i=90,a=-1;break;case 6:i=90;break;case 7:i=90,e=-1;break;case 8:i=-90}return{rotate:i,scaleX:e,scaleY:a}}(h);r=c.rotate,s=c.scaleX,d=c.scaleY}n.rotatable&&(o.rotate=r),n.scalable&&(o.scaleX=s,o.scaleY=d),this.clone()}},{key:"clone",value:function(){var t=this.element,i=this.url,e=void 0,a=void 0;this.options.checkCrossOrigin&&yt(i)&&(a=(e=t.crossOrigin)?i:(e="anonymous",Mt(i))),this.crossOrigin=e,this.crossOriginUrl=a;var n=document.createElement("img");e&&(n.crossOrigin=e),n.src=a||i;var o=this.start.bind(this),h=this.stop.bind(this);this.image=n,this.onStart=o,this.onStop=h,this.isImg?t.complete?this.timeout=setTimeout(o,0):ut(t,x,o,{once:!0}):(n.onload=o,n.onerror=h,nt(n,l),t.parentNode.insertBefore(n,t.nextSibling))}},{key:"start",value:function(t){var e=this,i=this.isImg?this.element:this.image;t&&(i.onload=null,i.onerror=null),this.sizing=!0;var a=r.navigator&&/(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(r.navigator.userAgent),n=function(t,i){tt(e.imageData,{naturalWidth:t,naturalHeight:i,aspectRatio:t/i}),e.sizing=!1,e.sized=!0,e.build()};if(!i.naturalWidth||a){var o=document.createElement("img"),h=document.body||document.documentElement;(this.sizingImage=o).onload=function(){n(o.width,o.height),a||h.removeChild(o)},o.src=i.src,a||(o.style.cssText="left:0;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;opacity:0;position:absolute;top:0;z-index:-1;",h.appendChild(o))}else n(i.naturalWidth,i.naturalHeight)}},{key:"stop",value:function(){var t=this.image;t.onload=null,t.onerror=null,t.parentNode.removeChild(t),this.image=null}},{key:"build",value:function(){if(this.sized&&!this.ready){var t=this.element,i=this.options,e=this.image,a=t.parentNode,n=document.createElement("div");n.innerHTML='<div class="cropper-container" touch-action="none"><div class="cropper-wrap-box"><div class="cropper-canvas"></div></div><div class="cropper-drag-box"></div><div class="cropper-crop-box"><span class="cropper-view-box"></span><span class="cropper-dashed dashed-h"></span><span class="cropper-dashed dashed-v"></span><span class="cropper-center"></span><span class="cropper-face"></span><span class="cropper-line line-e" data-action="e"></span><span class="cropper-line line-n" data-action="n"></span><span class="cropper-line line-w" data-action="w"></span><span class="cropper-line line-s" data-action="s"></span><span class="cropper-point point-e" data-action="e"></span><span class="cropper-point point-n" data-action="n"></span><span class="cropper-point point-w" data-action="w"></span><span class="cropper-point point-s" data-action="s"></span><span class="cropper-point point-ne" data-action="ne"></span><span class="cropper-point point-nw" data-action="nw"></span><span class="cropper-point point-sw" data-action="sw"></span><span class="cropper-point point-se" data-action="se"></span></div></div>';var o=n.querySelector("."+c+"-container"),h=o.querySelector("."+c+"-canvas"),r=o.querySelector("."+c+"-drag-box"),s=o.querySelector("."+c+"-crop-box"),d=s.querySelector("."+c+"-face");this.container=a,this.cropper=o,this.canvas=h,this.dragBox=r,this.cropBox=s,this.viewBox=o.querySelector("."+c+"-view-box"),this.face=d,h.appendChild(e),nt(t,S),a.insertBefore(o,t.nextSibling),this.isImg||ot(e,l),this.initPreview(),this.bind(),i.aspectRatio=Math.max(0,i.aspectRatio)||NaN,i.viewMode=Math.max(0,Math.min(3,Math.round(i.viewMode)))||0,nt(s,S),i.guides||nt(s.getElementsByClassName(c+"-dashed"),S),i.center||nt(s.getElementsByClassName(c+"-center"),S),i.background&&nt(o,c+"-bg"),i.highlight||nt(d,"cropper-invisible"),i.cropBoxMovable&&(nt(d,p),ct(d,m,k)),i.cropBoxResizable||(nt(s.getElementsByClassName(c+"-line"),S),nt(s.getElementsByClassName(c+"-point"),S)),this.render(),this.ready=!0,this.setDragMode(i.dragMode),i.autoCrop&&this.crop(),this.setData(i.data),G(i.ready)&&ut(t,C,i.ready,{once:!0}),gt(t,C)}}},{key:"unbuild",value:function(){this.ready&&(this.ready=!1,this.unbind(),this.resetPreview(),this.cropper.parentNode.removeChild(this.cropper),ot(this.element,S))}},{key:"uncreate",value:function(){var t=this.element;this.ready?(this.unbuild(),this.ready=!1,this.cropped=!1):this.sizing?(this.sizingImage.onload=null,this.sizing=!1,this.sized=!1):this.reloading?this.xhr.abort():this.isImg?t.complete?clearTimeout(this.timeout):mt(t,x,this.onStart):this.image&&this.stop()}}],[{key:"noConflict",value:function(){return window.Cropper=Xt,e}},{key:"setDefaults",value:function(t){tt(q,V(t)&&t)}}]),e}();tt(Rt.prototype,Nt,Et,zt,Lt,Yt,Ot),jQuery(document).ready(function(c){if(c.fn){var t=c.fn.so_cropper,l="cropper";c.fn.so_cropper=function(r){for(var t=arguments.length,s=Array(1<t?t-1:0),i=1;i<t;i++)s[i-1]=arguments[i];var d=void 0;return this.each(function(t,i){var e=c(i),a="destroy"===r,n=e.data(l);if(!n){if(a)return;var o=c.extend({},e.data(),c.isPlainObject(r)&&r);n=new Rt(i,o),e.data(l,n)}if("string"==typeof r){var h=n[r];c.isFunction(h)&&((d=h.apply(n,s))===n&&(d=void 0),a&&e.removeData(l))}}),void 0===d?this:d},c.fn.so_cropper.Constructor=Rt,c.fn.so_cropper.setDefaults=Rt.setDefaults,c.fn.so_cropper.noConflict=function(){return c.fn.so_cropper=t,this}}})});

    (function ($, window, document, undefined) {
        var cf = {
            minResolution: 500,
            zoomRatio: 0.01,
            rotationRatio: 0.2,
            thumbnail_scale: 0.4,
            localstorage_key_prefix: 'shineon_bu_'
        };
        var isMobile = function() {
            try{ document.createEvent("TouchEvent"); return true; }
            catch(e){ return false; }
        };
        var isLocalStorageAvailable = function(){
            var test = 'test';
            try {
                localStorage.setItem(test, test);
                localStorage.removeItem(test);
                return true;
            } catch(e) {
                return false;
            }
        };
        var isFacebookApp = function () {
            var ua = navigator.userAgent || navigator.vendor || window.opera;
            return (ua.indexOf("FBAN") > -1) || (ua.indexOf("FBAV") > -1);
        };
        var soBuyerUpload = {
            init: function (cropperData) {
                this.$form = $('#{{ product_form_id }}');
                this.$wrap = $('#so-product-form').length ? $('#so-product-form') : $('#{{ product_form_id }}');
                this.productId = {{ product.id }};
                this.section_settings = {{ section.settings | json }};
                this.image_bg_mode = '{{ section.settings.image_bg_mode }}';
                this.copy = {
                    btn_uploading: '{{ 'buyer_upload_btn_uploading_copy' | t }}'
                };
                this.rotateNormal = 0;
                this.img_transformations = {};
                this.product = {{ product | json }};
                this.product.variants = [];
                {% for variant in product.variants %}
                    {% assign variant_transformations = variant.metafields.shineon.transformations.value | default: variant.metafields.shineon.transformations %}
                    {% assign variant_transformations_filenames = variant.metafields.shineon.transformations_filenames.value | default: variant.metafields.shineon.transformations_filenames %}
                    // Add metafield info
                    var variant = {{ variant | json }};
                    variant.metafields = {{ variant.metafields.shineon | json }};
                    this.product.variants.push(variant);
                    {% assign variant_transformations_json = variant.metafields.shineon.transformations_json.value | default: variant.metafields.shineon.transformations_json %}
                    {% if variant_transformations_json != blank %}
                        {% assign variant_transformations_filenames_json = variant.metafields.shineon.transformations_filenames_json.value | default: variant.metafields.shineon.transformations_filenames_json %}
                        {% for filenames_str in variant_transformations_filenames_json %}
                            {% assign filenames = filenames_str | split: ',' %}
                            {% assign found_image = false %}
                            {% for image in product.images %}
                                {%- assign so_bu_image_name_aux = '_transformation_' | append: filenames[0] -%}
                                {% if image contains so_bu_image_name_aux %}
                                    {% assign found_image = true %}
                                    if (!this.img_transformations[{{ image.id }}]) {
                                        this.img_transformations[{{ image.id }}] = {
                                            id: {{ image.id }},
                                            src: '{{ image.src }}',
                                            variant_id: {{ variant.id }},
                                            transformation: {
                                                id: {{ filenames[0] }},
                                                img_src: {% if filenames[1] contains 'https://' %}'{{ filenames[1] }}'{% else %}'{{ filenames[1] | asset_url }}'{% endif %},
                                                background_src: '{{ filenames[2] | asset_url }}',
                                                img_dark_src: {% if filenames[3] contains 'https://' %}'{{ filenames[3] }}'{% else %}'{{ filenames[3] | asset_url }}'{% endif %},
                                                data: {{ variant_transformations_json | json }}[{{ filenames[0] }}]
                                            }
                                        };
                                    }
                                    {% break %}
                                {% endif %}
                            {% endfor %}
                            {% if found_image == false %}
                                this.img_transformations['transformation_{{ filenames[0] }}'] = {
                                    id: 'transformation_{{ filenames[0] }}',
                                    src: {% if filenames[1] contains 'https://' %}'{{ filenames[1] }}'{% else %}'{{ filenames[1] | asset_url }}'{% endif %},
                                    variant_id: {{ variant.id }},
                                    type: 'transformation',
                                    transformation: {
                                        id: {{ filenames[0] }},
                                        img_src: {% if filenames[1] contains 'https://' %}'{{ filenames[1] }}'{% else %}'{{ filenames[1] | asset_url }}'{% endif %},
                                        background_src: '{{ filenames[2] | asset_url }}',
                                        img_dark_src: {% if filenames[3] contains 'https://' %}'{{ filenames[3] }}'{% else %}'{{ filenames[3] | asset_url }}'{% endif %},
                                        data: {{ variant_transformations_json | json }}[{{ filenames[0] }}]
                                    }
                                };
                            {% endif %}
                        {% endfor %}
                    {% elsif variant_transformations != "[]" and variant_transformations != "{}" %}
                        {% assign found_image = false %}
                        {% if variant_transformations_filenames %}
                            {% assign filenames = variant_transformations_filenames %}
                            {% assign filenames = variant_transformations_filenames | split: ',' %}
                            {% for image in product.images %}
                                {%- assign so_bu_image_name_aux = '_transformation_' | append: filenames[0] -%}
                                {% if image contains so_bu_image_name_aux %}
                                    {% assign found_image = true %}
                                    if (!this.img_transformations[{{ image.id }}]) {
                                        this.img_transformations[{{ image.id }}] = {
                                            id: {{ image.id }},
                                            src: '{{ image.src }}',
                                            variant_id: {{ variant.id }},
                                            transformation: {
                                                id: {{ filenames[0] }},
                                                img_src: {% if filenames[1] contains 'https://' %}'{{ filenames[1] }}'{% else %}'{{ filenames[1] | asset_url }}'{% endif %},
                                                background_src: '{{ filenames[2] | asset_url }}',
                                                img_dark_src: {% if filenames[3] contains 'https://' %}'{{ filenames[3] }}'{% else %}'{{ filenames[3] | asset_url }}'{% endif %},
                                                data: JSON.parse({{ variant_transformations | json }})
                                            }
                                        };
                                    }
                                    {% break %}
                                {% endif %}
                            {% endfor %}
                            {% if found_image == false %}
                                this.img_transformations['transformation_{{ filenames[0] }}'] = {
                                    id: 'transformation_{{ filenames[0] }}',
                                    src: {% if filenames[1] contains 'https://' %}'{{ filenames[1] }}'{% else %}'{{ filenames[1] | asset_url }}'{% endif %},
                                    variant_id: {{ variant.id }},
                                    type: 'transformation',
                                    transformation: {
                                        id: {{ filenames[0] }},
                                        img_src: {% if filenames[1] contains 'https://' %}'{{ filenames[1] }}'{% else %}'{{ filenames[1] | asset_url }}'{% endif %},
                                        background_src: '{{ filenames[2] | asset_url }}',
                                        img_dark_src: {% if filenames[3] contains 'https://' %}'{{ filenames[3] }}'{% else %}'{{ filenames[3] | asset_url }}'{% endif %},
                                        data: JSON.parse({{ variant_transformations | json }})
                                    }
                                };
                            {% endif %}
                        {% endif %}
                    {% endif %}
                {% endfor %}
                this.transformationData = {};
                this.cropperData = cropperData;
                this.clickHoldIntervalId = 0;
                this.submitWithAjax = isLocalStorageAvailable() &&
                    (this.$form.data('use_shineon_cart_page_bu') === true || this.$form.data('express_checkout') === true )
                    && !!window.FormData;
                this.applyGrayScaleFilter = this.product.variants[0].metafields.grayscale === 1;

                this.cache();
                this.addPatches();
                this.missingRenderImageFailSafe();
                this.validation();
                this.setCustomCss();
                this.bindEvents();

                return this;
            },

            cache: function () {
                this.$container = $('#ProductSection-product-template-shineon');
                this.$loading = $('#so-bu-loading');
                this.$img_defaults = $('#so-bu-default-images img');
                this.$productReviewsPriceWrap = this.$container.find('#so-product-reviews-price-wrap');
                this.$explainerSliderSlick = $('#explainer-graphics-slider-slick');
                this.$input_img_upload = this.$wrap.find('input[name="properties[Upload]"]');
                this.$wizardWrapper = this.$container.find('#so-bu-img-viewer-wrapper');
                this.$uploadButtonWrap = this.$container.find('.so-upload-button-wrap');
                this.$upload_wrapper = this.$container.find('#so-upload-wrapper');
                this.$slickThumbnailCarousel = this.$container.find('#so-slick-thumbnail-carousel-'+this.productId);
                this.$slickFeaturedCarousel = this.$container.find('#so-slick-featured-carousel-'+this.productId);
                this.$img_transformation = this.$container.find('#so-bu-default-transformation');
                this.$img_uploaded = this.$container.find('#so-img-uploaded');
                this.$dropMain = this.$container.find('.so-img-drop-main');
                this.$controls = this.$container.find('.so-image-controls');
                this.$steps = this.$container.find('#so-bu-information');
                this.$progressBarSteps = $('#so-bu-progress-bar-steps');
                this.$confirmDesign = this.$container.find('.so-bu-confirm-design');
                this.$productFormWrap = this.$container.find('#product-form-options-wrap');
                this.$productPaymentAndDescriptionWrap = this.$container.find('#so-product-payment-and-description');
                this.$backToUploadWizard = this.$container.find('#so-bu-back-to-img-wizard');
                this.$mobileDragOrPinchMessage = this.$container.find('#so-bu-mobile-controls-message');
            },

            validation: function() {
                if (Object.keys(this.img_transformations).length === 0){
                    console.error('This product has no images with matching buyer-upload transformations.');
                }
            },

            setCustomCss: function() {
                if (isMobile()) {
                    // decrease font-size settings
                    this.$productReviewsPriceWrap.find('.so-product-title h1').css('font-size', function (i, size) {
                        return Math.max(18, parseInt(size) / 1.5) + 'px';
                    });
                    this.$productReviewsPriceWrap.find('.so-product-pricing').css('font-size', function (i, size) {
                        return Math.max(16, parseInt(size) / 1.5) + 'px';
                    }).find('span').css('font-size','');
                    // move above progress bar
                    /*this.$productReviewsPriceWrap.detach()
                        .insertBefore(this.$progressBarSteps)
                        .wrap("<div class='so-row'></div>")
                        .wrap("<div class='so-col-12'></div>");*/
                }
                if (!this.$img_transformation.prop('complete')) {
                    return;
                }
                var dropMainHeight = 0;
                if($(window).width() < 768)
                {
                    dropMainHeight = 70;
                }
                this.$dropMain.css('height', this.$img_transformation.height() + 2 + dropMainHeight); //2 for the border width; 70 is for Drag and Pinch

                /** 2158 **/
                var featured_carousel_image_cropped = $('#{{ featured_carousel }} .so-carousel-img');

                featured_carousel_image_cropped.css({
                    'min-width': this.$img_transformation.height(),
                    'min-height': this.$img_transformation.height()
                });
                /** /. 2158 **/

                // set position and size of image
                if (this.transformationData) {
                    var fw = this.$img_transformation.width() / this.transformationData.width;
                    var fh = this.$img_transformation.height() / this.transformationData.height;
                    this.$upload_wrapper.css({
                        position: 'absolute',
                        left: this.transformationData.zone_offset_x * fw,
                        top: this.transformationData.zone_offset_y * fh,
                        width: this.transformationData.zone_width * fw,
                        height: this.transformationData.zone_height * fh
                    });
                }

                if (this.applyGrayScaleFilter) {
                    this.$upload_wrapper.addClass('so-grayscale-filter');
                }
            },

            showDropHintOverlay: function(display, elem){
                var css = display
                    ? {opacity: 0.1, 'pointer-events': 'auto'}
                    : {opacity: 1, cursor: 'default'};
                this.$img_transformation.css(css);
                this.$upload_wrapper.css(css);
                $(elem).toggleClass('drop-hint', display);
            },

            bindEvents: function() {
                var self = this;
                this.$img_defaults.on('load', function (evt) {
                    evt.stopImmediatePropagation();
                    if (this.naturalHeight === 0){
                        self.removeImgTransformation(this.dataset.transformation_id);
                    }
                });
                this.$img_transformation.on('load', function (evt) {
                    evt.stopImmediatePropagation();
                    self.showStep2();
                    self.setCustomCss();
                    self.initCropper();
                    self.rotateNormal = self.$cropper.so_cropper('getData', true).rotate *  -1;
                });
                this.$input_img_upload.on('change', function (evt) {
                    self.renderImage(evt.target.files[0]);
                });
                this.$controls.find('span.so-icons')
                    .on('click', function () {
                        self.controlHandles($(this).data('so-icon'));
                    }).on('mousedown touchstart', function (e) {
                        self.clickHoldIntervalId = setInterval(function () {
                        self.controlHandles($(e.currentTarget).data('so-icon'));
                    }, 50);
                }).on('mouseup mouseleave touchend touchcancel', function () {
                    clearInterval(self.clickHoldIntervalId);
                });
                this.$img_uploaded.on('load', function (evt) {
                    evt.stopImmediatePropagation();
                    var width = this.naturalWidth || this.width,
                        height = this.naturalHeight || this.height;
                    if (width < cf.minResolution || height < cf.minResolution) {
                        alert('Your image is too small - ' + width + 'x' + height + 'px.' +
                            '\n\nPlease upload an image with at least 500x500px.');
                        self.$loading.hide();
                        return false;
                    }
                    self.setTransformation();
                });
                this.$container.find('.so-bu-upload-new-image').off('click').on('click', function () {
                    self.$input_img_upload.trigger('click');
                });
                this.$confirmDesign.off('click').on('click', function (evt) {
                    evt.stopImmediatePropagation();
                    self.confirmDesign();
                });
                this.$backToUploadWizard.on('click', function (evt) {
                    evt.stopImmediatePropagation();
                    self.showCheckoutForm(false);
                    $('#explainer-graphics-slider-slick-featured').css('display', 'none');
                });
                $(window).on('orientationchange', function () {
                    // timeout to get the correct dimensions of the elements in the page
                    setTimeout(function () {
                        self.setCustomCss();
                        if (self.$cropper) self.initCropper();
                    }, 50)
                });

                if (this.submitWithAjax === true) {
                    this.$form.one('submit', function () {
                        return self.submitForm();
                    });
                    this.$def_cart_with_ajax = new $.Deferred();
                    this.$form.trigger('shineon/add_submit_deferred', this.$def_cart_with_ajax.promise());
                }
            },

            addTransformationDataToForm: function () {
                var d = this.$cropper.so_cropper('getData', true);
                var r = d.rotate + this.rotateNormal;
                var ar = this.getTransformationZoneAspectRation();
                var strData = "x:" + d.x + ",y:" + d.y + ",w:" + d.width + ",h:" + d.height + ",r:" + r + ",ar:" + ar;
                this.$wrap.find('input[name="properties[_UploadData]"]').val(strData);
            },

            renderImage: function (file) {
                if (file === undefined) return;
                this.$loading.show();
                var self = this;
                if (file.type.match('image.*')) {
                    var reader = new FileReader();
                    reader.onload = function (evt) {
                        if (evt.target.readyState === FileReader.DONE) {
                            self.$img_uploaded.attr('src', evt.target.result);
                            self.$img_uploaded.data('filename', file.name);

                            self.scrollIntoView(self.$dropMain);
                        }
                    };
                    reader.readAsDataURL(file);
                } else {
                    alert("Please upload a valid image.");
                    this.$loading.hide();
                }
            },

            getTransformationZoneAspectRation: function () {
                return this.transformationData.zone_width / this.transformationData.zone_height;
            },

            initCropper: function () {
                var self = this;
                if (this.$cropper) {
                    this.$cropper.so_cropper('destroy');
                }

                this.$cropper = this.$img_uploaded.so_cropper({
                    viewMode: 3,
                    dragMode: 'move',
                    aspectRatio: this.getTransformationZoneAspectRation(),
                    restore: false,
                    modal: false,
                    guides: false,
                    center: false,
                    highlight: false,
                    background: false,
                    autoCropArea: 1,
                    wheelZoomRatio: 0.05,
                    cropBoxMovable: false,
                    cropBoxResizable: false,
                    toggleDragModeOnDblclick: false,
                    minCropBoxWidth: cf.minResolution,
                    minCropBoxHeight: cf.minResolution,
                    minContainerWidth: this.$upload_wrapper.width(),
                    minContainerHeight: this.$upload_wrapper.height(),
                    checkOrientation: false,
                    checkCrossOrigin: false,
                    crop: function (event) {
                        var img = this;
                        var e = event.detail;

                        self.$controls.find('span.so-icons').each(function (i, el) {
                            var $el = $(el);
                            switch ($el.data('so-icon')) {
                                case 'angle-left':
                                    return $el.toggleClass('disabled', img.naturalWidth - e.x - e.width < 1);
                                case 'angle-right':
                                    return $el.toggleClass('disabled', e.x < 1);
                                case 'angle-up':
                                    return $el.toggleClass('disabled', img.naturalHeight - e.y - e.height < 1);
                                case 'angle-down':
                                    return $el.toggleClass('disabled', e.y < 1);
                                case 'search-plus':
                                    return $el.toggleClass('disabled', e.height <= cf.minResolution || e.width <= cf.minResolution);
                                case 'search-minus':
                                    return $el.toggleClass('disabled', e.height * (1 + cf.zoomRatio) >= img.height || e.width * (1 + cf.zoomRatio) >= img.width);
                                default:
                                    return;
                            }
                        });
                    },
                    ready: function () {
                        var $this = $(this);
                        if (!self.cropperData) {
                            var canvasData = $this.so_cropper('getCanvasData');
                            $this.so_cropper('zoomTo', canvasData.width / canvasData.naturalWidth * 1.25, {
                                x: canvasData.width / 2,
                                y: canvasData.height / 2
                            });
                        }
                        var cropBoxData = $this.so_cropper('getCropBoxData');
                        self.$loading.hide();
                        self.maxZoomRatio = Math.min(cropBoxData.width, cropBoxData.height) / cf.minResolution;
                    },
                    zoom: function (e) {
                        if (e.detail.ratio > e.detail.oldRatio) { // Zoom in
                            if (e.detail.oldRatio > self.maxZoomRatio) {
                                e.preventDefault();
                            }
                        }
                    }
                });
            },

            setTransformation: function () {
                // current image in slider
                var currentImageID = this.$slickFeaturedCarousel.find('.so_slick-current').data('image_id');
                var currentImgTransformation;

                // was a default transformation active at this moment?
                if (this.img_transformations[currentImageID]) {
                    currentImgTransformation = this.img_transformations[currentImageID];
                } else {
                    // if we have the position property on the transformations (on the new version of the metafields)
                    // Get the one with the lowest position
                    let min_position = 9999999999, img_transformation;
                    for (let key in this.img_transformations) {
                        img_transformation = this.img_transformations[key];
                        if (img_transformation.transformation.data.position && img_transformation.transformation.data.position < min_position) {
                            currentImgTransformation = img_transformation;
                            min_position = img_transformation.transformation.data.position;
                        }
                    }
                    if (!currentImgTransformation) {
                        // no default one currently selected
                        // set the first one that has a default transformation
                        currentImgTransformation = this.img_transformations[Object.keys(this.img_transformations)[0]];
                    }
                }

                var switch_img_src = currentImgTransformation.transformation.img_src;

                if (this.image_bg_mode === 'img_dark_src' && currentImgTransformation.transformation.img_dark_src) {
                    switch_img_src = currentImgTransformation.transformation.img_dark_src;
                }

                this.$img_transformation.prop('src', ''); // https://bugs.chromium.org/p/chromium/issues/detail?id=7731
                this.$img_transformation.prop('src', switch_img_src);
                this.transformationData = currentImgTransformation.transformation.data;
            },

            showStep2: function () {
                this.$form.find('.so-engraving-input:first').trigger('input'); //hack to show the correct engraving variant
                $('body').removeClass('so-step-1').addClass('so-step-2');
                this.$container.removeClass('so-bu-step1 so-bu-step3').addClass('so-bu-step2');
                this.progress_bar.showStepNumber.call(this, 2);
                this.$wizardWrapper
                    .next('.so-product-images-featured-wrap').addClass('so-hidden')
                    .closest('.so-row').find('.so-col-images-thumb-wrap img').addClass('so-static-thumbnails');
                this.$wizardWrapper
                    .next('.so-product-images-featured-wrap').addClass('so-hidden')
                    .closest('.so-row').find('.so-col-images-thumb-wrap').addClass('so-hidden');

                this.$img_transformation.css('pointer-events', 'none');

                this.$container.find('.step2').removeClass('so-hidden');
                if (isMobile()) {
                    this.$mobileDragOrPinchMessage.removeClass('so-hidden').addClass('so-bu-step2');
                }
                this.scrollIntoView(this.$wizardWrapper);
            },

            getCroppedCanvas: function () {
                return this.$cropper.so_cropper('getCroppedCanvas', {
                    imageSmoothingEnabled: false,
                    imageSmoothingQuality: 'high'
                });
            },

            getCroppedCanvasWithTransformation: function (img) {
                var t = img.transformation.data,
                    dom_img_transformation = this.$img_defaults.filter('[data-transformation_id="' + img.transformation.id + '"]')
                        .first().get(0),
                    imgWasLoaded = dom_img_transformation && dom_img_transformation.complete && dom_img_transformation.naturalWidth !== 0;

                if (!dom_img_transformation || !imgWasLoaded) {
                    console.error('Img transformation not found transformation_id', img.transformation.id);
                    return;
                }
                var canvas_tag = $('<canvas>')
                    .prop({
                        width: t.width,
                        height: t.height
                    }).get(0);
                var ctx = canvas_tag.getContext('2d');
                var croppedCanvas = this.getCroppedCanvas();

                if (this.applyGrayScaleFilter) {
                    this.convertImageToGrayScale(croppedCanvas);
                }

                if (ctx)
                {
                    ctx.drawImage(croppedCanvas, t.zone_offset_x, t.zone_offset_y, t.zone_width, t.zone_height);
                    ctx.drawImage(dom_img_transformation, 0, 0, t.width, t.height);

                    return canvas_tag;
                }
            },

            convertImageToGrayScale: function(canvas) {
                var context = canvas.getContext('2d'),
                    imgData = context.getImageData(0, 0, canvas.width, canvas.height),
                    pixels  = imgData.data;
                for (var i = 0, n = pixels.length; i < n; i += 4) {
                    var grayscale = pixels[i] * .3 + pixels[i+1] * .59 + pixels[i+2] * .11;
                    pixels[i  ] = grayscale;        // red
                    pixels[i+1] = grayscale;        // green
                    pixels[i+2] = grayscale;        // blue
                    //pixels[i+3]              is alpha
                }
                context.putImageData(imgData, 0, 0);
            },

            confirmDesign: function () {
                if (this.$cropper === undefined) {
                    this.$input_img_upload.trigger('click');
                    return;
                }
                var self = this;

                this.$confirmDesign.addClass('disabled');
                this.$loading.show(50, function () {
                    self.renderDefaultTransformations();
                    self.showCheckoutForm(true);
                    self.addTransformationDataToForm();
                });
                $('#explainer-graphics-slider-slick').addClass('so-hidden');
            },

            renderDefaultTransformations: function () {
                // foreach default transformation
                // build composite canvas object, convert to dataUrl, append it where need
                var imageZoomEnabled = !!(this.section_settings.image_zoom
                    && shineon
                    && shineon.zoom);

                for (var image_id in this.img_transformations) {
                    try {
                        var img_transformation = this.img_transformations[image_id];
                        if (typeof img_transformation.transformation === 'undefined') {
                            continue;
                        }
                        var canvas = this.getCroppedCanvasWithTransformation(img_transformation),
                            $featuredImgs = $('.so-product-images-featured-wrap img[data-transformation_id='
                                + img_transformation.transformation.id + ']'),
                            $slickThumbnailCarouselImg = this.$slickThumbnailCarousel
                                .find('img[data-transformation_id=' + img_transformation.transformation.id + ']');

                        if (!canvas) {
                            throw 'error no canvas';
                        }

                        if (canvas) {
                            // replace default image in carrousel with this
                            $featuredImgs
                                .prop('src', canvas.toDataURL('image/png'))
                                .attr('data-variant_id', img_transformation['variant_id']);

                            // thumbnail carrousel
                            // resize image to use on the shine cart template
                            var resizedCanvas = document.createElement("canvas");
                            var resizedContext = resizedCanvas.getContext("2d");

                            resizedCanvas.height = canvas.height * cf.thumbnail_scale;
                            resizedCanvas.width = canvas.width * cf.thumbnail_scale;

                            resizedContext.drawImage(canvas, 0, 0, resizedCanvas.width, resizedCanvas.height);

                            $slickThumbnailCarouselImg
                                .prop('src', resizedCanvas.toDataURL('image/png'))
                                .attr('data-variant_id', img_transformation['variant_id']);

                            if (imageZoomEnabled) {
                                // Enable zoom on renders, replace on images created by zoom plugin
                                $featuredImgs.siblings('img.zoomImg')
                                    .attr('src', canvas.toDataURL('image/png'));
                            }
                        }
                        else
                        {
                            resizedContext.clearRect(0, 0, resizedCanvas.width, resizedCanvas.height);
                            this.renderDefaultTransformations();
                        }
                    } catch(error) {
                        console.error(error);
                        // remove images from slider
                        $('.so-product-images-featured-wrap img[data-transformation_id='
                            + img_transformation.transformation.id + ']')
                            .parent().remove();
                        $slickThumbnailCarouselImg = this.$slickThumbnailCarousel
                            .find('img[data-transformation_id=' + img_transformation.transformation.id + ']')
                            .parent().remove();
                        shineon.carousels.destroy();
                        shineon.carousels.init();
                    }
                }
            },

            scrollIntoView: function ($elem) {
                if ($elem.length) {
                    $('html, body').animate({
                        scrollTop: $elem.offset().top - 130
                    }, 500);
                }
            },

            showCheckoutForm: function (display) {
                $('body').removeClass('so-step-2').addClass('so-step-3');
                display
                    ? this.$container.removeClass('so-bu-step1 so-bu-step2').addClass('so-bu-step3')
                    : this.$container.removeClass('so-bu-step1 so-bu-step3').addClass('so-bu-step2');
                this.$backToUploadWizard.css('display', display ? 'block' : 'none');
                this.$wizardWrapper.toggleClass('so-hidden', display)
                    .next('.so-product-images-featured-wrap').removeClass('so-hidden');
                if (this.$explainerSliderSlick.length) {
                    shineon.carousels.destroy();
                    this.$explainerSliderSlick.toggleClass('so-hidden', display)
                        .siblings('.so-row').toggleClass('so-hidden-carousel', !display);
                    shineon.carousels.init();
                } else {
                    this.$slickFeaturedCarousel.parent().toggleClass('so-hidden', !display);
                    this.$slickThumbnailCarousel.find('img').toggleClass('so-static-thumbnails', !display);
                }
                this.progress_bar.showStepNumber.call(this, display ? 3 : 2);
                this.$steps.toggleClass('so-hidden', display);
                this.$productFormWrap.toggleClass('so-hidden', !display);
                this.$productPaymentAndDescriptionWrap.toggleClass('so-hidden', !display);
                this.$wrap.trigger('so-product-set-current-variant');
                this.scrollIntoView(display ? this.$form : this.$wizardWrapper);
                this.$loading.hide();
                this.$form.attr('action', '/cart/add'); //zipify
                this.$confirmDesign.removeClass('disabled');
            },

            controlHandles: function (action) {
                switch (action) {
                    case 'angle-left':
                        return this.$cropper.so_cropper('move', -1, 0);
                    case 'angle-right':
                        return this.$cropper.so_cropper('move', 1, 0);
                    case 'angle-up':
                        return this.$cropper.so_cropper('move', 0, -1);
                    case 'angle-down':
                        return this.$cropper.so_cropper('move', 0, 1);
                    case 'search-plus':
                        return this.$cropper.so_cropper('zoom', cf.zoomRatio);
                    case 'search-minus':
                        return this.$cropper.so_cropper('zoom', -cf.zoomRatio);
                    case 'undo':
                        return this.$cropper.so_cropper('rotate', -cf.rotationRatio);
                    case 'redo':
                        return this.$cropper.so_cropper('rotate', cf.rotationRatio);
                    default:
                        return false;
                }
            },

            submitForm: function () {
                var self = this;

                this.$form.find('.so-modal-btn-add-to-cart-copy').text(this.copy.btn_uploading + '...');

                // send with ajax
                $.ajax({
                    type: 'POST',
                    url: '/cart/add.js',
                    dataType: 'json',
                    data: new FormData(this.$form[0]),
                    contentType: false,
                    processData: false
                })
                    .done(function (response) {
                        self.saveRenderedImageToLocalStorage(response.key);
                        self.$form.data('submitted_with_ajax', 1);
                        self.$def_cart_with_ajax.resolve({def_cart_with_ajax_bu: true});
                    })
                    .fail(function (jqxhr) {
                        console.error(jqxhr);
                        self.$def_cart_with_ajax.reject(jqxhr);
                    });

                return false;
            },

            /**
             * Saves the selected variant rendered image
             * (transformation + cropped uploaded image)
             * to localStorage
             */
            saveRenderedImageToLocalStorage: function (key) {
                try {
                    var variant_id = this.$form.find('input[name="id"]').val(),
                        thumbCarousel = $('#so-slick-thumbnail-carousel-' + this.productId),
                        is_bu_image_uniq = 0;
                        current_variant = {};
                        for (var i = 0; i < this.product.variants.length; i++) {
                            if (this.product.variants[i].id == variant_id)
                            {
                                current_variant = this.product.variants[i];
                            }
                        }
                        if (thumbCarousel.find('img[data-variant_id=' + variant_id + ']').length > 1 && current_variant.metafields.gold == 0)
                        {
                            is_bu_image_uniq = 1;
                        }
                    var
                        getImgDataUrl = function (variant_id) {
                            return $(thumbCarousel.find('img[data-variant_id=' + variant_id + ']')[is_bu_image_uniq]).prop('src');
                        },
                        imgDataURL = getImgDataUrl(variant_id);

                    if (!imgDataURL) {
                        var variant = this.findVariantByID(variant_id);

                        // try to find the sibling engraving variant
                        var sibling_variant = this.getEngravingSibling(variant);
                        if (sibling_variant) {
                            imgDataURL = getImgDataUrl(sibling_variant.id);
                        }

                        // try to find the sibling size variants
                        if (!imgDataURL) {
                            var sibling_variants = this.getSizeSiblings(variant);
                            for (var i = 0; i < sibling_variants.length && !imgDataURL; i++) {
                                imgDataURL = getImgDataUrl(sibling_variants[i].id);
                            }
                        }

                        if (!imgDataURL) {
                            console.error('rendered image not found');
                        }
                    }

                    localStorage.setItem(cf.localstorage_key_prefix + key, imgDataURL);
                    return true;
                } catch (err) {
                    if (err.code === 22) {
                        console.error('Local storage exceeded the quota');
                    } else {
                        console.error('saveRenderedImageToLocalStorage', err);
                    }
                    return false;
                }
            },

            /**
             * Find the variant by id
             * @returns shopify variant object or null
             */
            findVariantByID: function (variant_id) {
                var variantId = parseInt(variant_id);
                for (var i = 0; i < this.product.variants.length; i++) {
                    if (this.product.variants[i].id === variantId) {
                        return this.product.variants[i];
                    }
                }
                return null;
            },

            /**
             * Gets the sibling engraving variant No/Yes
             * @returns shopify variant object or null
             */
            getEngravingSibling: function (variant) {
                // 3 options: option1 always title
                // engraving: 2 or 3
                var engraving_option_id = this.product.options.reduce(function (carry, opt, index) {
                        if ({{ has_engraving | json }}) {
                            return 2; // product.options based 0
                        }
                    }, null),
                    non_engraving_option = engraving_option_id === 2 ? 'option3' : 'option2';
                if (!engraving_option_id) {
                    // no engraving variants
                    return null;
                }
                for (var i = 0; i < this.product.variants.length; i++) {
                    if (variant.id !== this.product.variants[i].id &&
                        variant.option1 === this.product.variants[i].option1 &&
                        variant[non_engraving_option] === this.product.variants[i][non_engraving_option]) {
                        return this.product.variants[i]
                    }
                }
                return null;
            },
            /**
             * Gets the sibling engraving variant No/Yes
             * @returns array of shopify variant object or empty array
             */
            getSizeSiblings: function (variant) {
                var ret = [], v1 = variant, v2;
                for (var i = 0; i < this.product.variants.length; i++) {
                    v2 = this.product.variants[i];
                    if (v1.id !== v2.id &&
                        v1.metafields.type === v2.metafields.type &&
                        v1.metafields.size_option === v2.metafields.size_option
                    ) {
                        ret.push(this.product.variants[i]);
                    }
                }
                return ret
            },
            missingRenderImageFailSafe: function () {
                var self = this;
                this.$img_defaults.each(function (k, v) {
                    if (v.complete && v.naturalHeight === 0) {
                        self.removeImgTransformation(v.dataset.transformation_id);
                    }
                });
            },
            removeImgTransformation: function (transformation_id) {
                if (!this.img_transformations.hasOwnProperty('transformation_' + transformation_id)) {
                    return;
                }

                delete this.img_transformations['transformation_' + transformation_id];

                this.$img_defaults.filter('[data-transformation="' + transformation_id + '"]').remove();

                shineon.carousels.destroy();
                $('img.so-carousel-img[data-transformation_id="' + transformation_id + '"]').parent().remove();
                shineon.carousels.init();
            },

            progress_bar: {
                showStepNumber: function (step_num) {
                    this.$progressBarSteps.find('li').each(function(i, el) {
                        $(el).toggleClass('active', i < step_num);
                    })
                }
            },

            /**
             * Patches / Hacks / Fixes
             */
            addPatches: function(){
                /**
                 * accept=".jpg,.jpeg,.png,.svg,.tiff,.bmp,.webp,.bpg"
                 * doesn't work in Facebook Browser App
                 */
                if (isMobile()) {
                    this.$input_img_upload.removeAttr('accept');
                }
                /**
                 * Zipify
                 */
                this.$form.removeAttr('action');
                /**
                 * https://developer.mozilla.org/en-US/docs/Web/CSS/position#fixed
                 */
                this.$container.parents().addClass('so-position-fixed');
                $('body').addClass('so-step-1');
            }
        };

        var bu = soBuyerUpload.init();

        document.addEventListener('shopify:section:load', function(e) {
            var $input_img_upload = bu.$input_img_upload;
            var $img_uploaded = bu.$img_uploaded;
            var cropperData = bu.$cropper ? $img_uploaded.so_cropper('getData') : undefined;

            bu = soBuyerUpload.init(cropperData);

            if ($img_uploaded.prop('src')){
                bu.$input_img_upload.replaceWith($input_img_upload);
                bu.$img_uploaded.prop('src', $img_uploaded.prop('src'));
                bu.$img_uploaded.data('filename', $img_uploaded.data('filename'));
            }
        });

    })(window.jQuery, window, document);
});
</script>





    {% when 'default-images' %}





<div id="so-bu-loading" style="display: none;"></div>
<div id="so-bu-default-images" class="so-hidden">
{%- assign so_bu_missing_default_images = "" | split: '--empty-array--' -%}
{% for variant in product.variants %}
    {% if one_style == 1 and variant.metafields.shineon.type != so_current_variant.metafields.shineon.type %}
        {% continue %}
    {% endif %}
    {% assign variant_transformations_json = variant.metafields.shineon.transformations_json.value | default: variant.metafields.shineon.transformations_json %}
    {% assign variant_transformations = variant.metafields.shineon.transformations.value | default: variant.metafields.shineon.transformations %}
    {% assign variant_transformations_filenames = variant.metafields.shineon.transformations_filenames.value | default: variant.metafields.shineon.transformations_filenames %}
    {% if variant_transformations_json != blank  %}
        {% assign variant_transformations_filenames_json = variant.metafields.shineon.transformations_filenames_json.value | default: variant.metafields.shineon.transformations_filenames_json %}
        {% for filenames_str in variant_transformations_filenames_json %}
            {%- assign filenames = filenames_str | split: ',' -%}
            {%- assign so_bu_transformation_filenames_aux_arr = filenames_str | split: '--array-of-one--' %}
            {%- assign so_bu_missing_default_images = so_bu_missing_default_images | concat: so_bu_transformation_filenames_aux_arr -%}
            <img class="so-bu-default-images so-hidden so-lazy"
                 data-src="{% if filenames[1] contains 'https://' %}{{ filenames[1] }}{% else %}{{ filenames[1] | asset_url }}{% endif %}"
                 data-transformation_id="{{ filenames[0] }}"
                 data-variant_id="{{ variant.id }}"
                 crossorigin="anonymous"
            >
        {% endfor %}
    {% elsif variant_transformations != "[]" and variant_transformations != "{}"  %}
        {% comment %} Back compatibily when we were not using json {% endcomment %}
        {%- assign so_bu_transformation_filenames = variant_transformations_filenames | split: ',' %}
        {%- assign so_bu_transformation_id_arr = so_bu_transformation_filenames | first | split: '--array-of-one--'-%}
        {%- assign so_bu_transformation_filenames_aux_arr = variant_transformations_filenames | split: '--array-of-one--' %}
        {%- assign so_bu_missing_default_images = so_bu_missing_default_images | concat: so_bu_transformation_filenames_aux_arr -%}
        <img class="so-bu-default-images so-hidden so-lazy"
            data-src="{% if so_bu_transformation_filenames[1] contains 'https://' %}{{ so_bu_transformation_filenames[1] }}{% else %}{{ so_bu_transformation_filenames[1] | asset_url }}{% endif %}"
            data-transformation_id="{{ so_bu_transformation_id_arr[0] }}"
            data-variant_id="{{ variant.id }}"
            crossorigin="anonymous"
        >
    {% endif %}
{% endfor %}
</div>
{%- assign so_bu_missing_default_images = so_bu_missing_default_images | uniq -%}

{%- assign so_bu_product_explainer_images = "" | split: '--empty-array--' -%}
{% for image in product.images %}
    {%- assign so_bu_product_explainer_images_arr = image.src | img_url: '720x' | split: '--array-of-one--' -%}
    {%- assign so_bu_product_explainer_images = so_bu_product_explainer_images | concat: so_bu_product_explainer_images_arr -%}
{% endfor %}



    {% when 'analytics-scripts' %}
    {% if shop.metafields.shineon.is_shineon_brand == true and shop.metafields.shineon.is_shineon_brand != blank %}
      {% include 'request-host' %}
    {% endif %}

{% unless sopp_analytics_scripts_loaded == true %}
{% assign sopp_analytics_scripts_loaded = true %}
<script>
window.shineon = window.shineon || {};
window.shineon.analytics = window.shineon.analytics || {
    debug: false,
    pixel_fires: {
        page_view: false,
        product_view: false
    },
    log: function(message, data) {
        if(this.debug) {
            console.log(message, JSON.stringify(data));
        }
    },
    send_beacon: function(event_name, variants, data) {
        this.log('so.send_beacon',{
            event_name: event_name,
            variants: variants,
            data: data
        });
        document.dispatchEvent(new CustomEvent('shineon.events.' + event_name, {
            detail: {
                variants: variants,
                data: data
            }
        }));
    },
    product_view: function(product, data) {
        this.log('so.product_view');

        this.send_beacon('view', [{
            id: product.current_variant.id,
            quantity: 1,
            amount: product.current_variant.price / 100
        }]);

        if (product.metafields.fb_pixel_id) {
            this.log('so.product_view.init_pixel.fb_pixel_id',{fb_pixel_id: product.metafields.fb_pixel_id });
            shineon.analytics.fb.send_event.init_pixel(product.metafields.fb_pixel_id);
            shineon.analytics.fb.send_event.page_view(product.metafields.fb_pixel_id)
            shineon.analytics.fb.send_event.view_content({
                product: product,
                fb_pixel_id: product.metafields.fb_pixel_id
            });
        }

        if (product.metafields.ga_account_id) {
            this.log('so.product_view.init_pixel.ga_account_id',{ga_account_id: product.metafields.ga_account_id});
            shineon.analytics.ga.send_event.view_item({
                ga_account_id: product.metafields.ga_account_id,
                product: product,
                category: (data || {}).category || 'Jewelry'
            });
        }
    },
    add_to_cart: function(product, quantity) {
        var variant = product.variant || product.current_variant
        var atc_payload = [{
            id: product.current_variant.id,
            quantity: quantity,
            amount: product.current_variant.price / 100 * quantity
        }];
        this.log('so.add_to_cart.fire_beacon',atc_payload);
        this.send_beacon('add_to_cart', atc_payload);
    },
    remove_from_cart: function(cart_item, variant) {
        var rfc_payload = [{
            id: variant.id,
            quantity: cart_item.quantity,
            amount: cart_item.final_line_price / 100
        }];
        this.log('so.remove_from_cart.send_beacon', rfc_payload);

        this.send_beacon('remove_from_cart', rfc_payload);

        try {
            if (variant.metafields.ga_account_id) {
                this.log('so.remove_from_cart.send_google');
                shineon.analytics.ga.send_event.remove_from_cart({
                    'ga_account_id': variant.metafields.ga_account_id,
                    'cart_item': cart_item,
                    'quantity': cart_item.quantity
                });
            }
            if (variant.metafields.fb_pixel_id) {
                this.log('so.remove_from_cart.send_facebook');
                shineon.analytics.fb.send_event.remove_from_cart({
                    'fb_pixel_id': variant.metafields.fb_pixel_id,
                    'variant': variant,
                    'cart_item': cart_item
                });
            }

        } catch (e) {
            console.error(e);
        }
    },
    begin_checkout: function(cart, variants, callback) {
        this.log('so.begin_checkout');

        var ga_promises = {}, fb_promises = {},
            intercart = {ga: {}, fb: {}},
            beacon = [],
            item, variant,
            getNewPromise = function(timeout, key) {
                return new Promise(function(resolve, reject) {
                    setTimeout(resolve, timeout, key);
                });
            },
            filterCartItemsByVariantMetafield = function(cart_items, variants, metafield_key, metafield_value) {
                var items = [], item, variant;
                for (var i = 0; i < cart_items.length; i++) {
                    item = cart_items[i];
                    variant = variants[item.variant_id];
                    if(variant && variant.metafields && variant.metafields[metafield_key] == metafield_value) {
                        items.push(item);
                    }
                }
                return items;
            };

        for (var i = 0, data_cart = cart; i < cart.items.length; i++) {
            item = cart.items[i];
            variant = variants[item.variant_id];

            if (typeof variant === 'undefined') {
                continue;
            }

            this.log('so.begin_checkout.per_cart_item.iteration', {
                item: item,
                variant: variant
            });

            beacon.push({
                id: variant.id,
                quantity: item.quantity,
                amount: item.price / 100 * item.quantity
            });

            if (variant.metafields.ga_account_id) {
                this.log('so.begin_checkout.send_google');
                if(! ga_promises[variant.metafields.ga_account_id]) {
                    ga_promises[variant.metafields.ga_account_id] = getNewPromise(1000, variant.metafields.ga_account_id);
                    data_cart.items = filterCartItemsByVariantMetafield(
                        cart.items, variants, 'ga_account_id', variant.metafields.ga_account_id
                    );
                    shineon.analytics.ga.send_event.begin_checkout({
                        'ga_account_id': variant.metafields.ga_account_id,
                        'cart': data_cart,
                        'callback': ga_promises[variant.metafields.ga_account_id]
                    });
                }
            }

            if (variant.metafields && variant.metafields.fb_pixel_id) {
                shineon.analytics.fb.send_event.initiate_checkout({
                    'fb_pixel_id': variant.metafields.fb_pixel_id,
                    'product': variant,
                    'quantity': item.quantity
                });

                this.log('so.begin_checkout.send_facebook');
            }
        }

        this.send_beacon('begin_checkout', beacon);

        var promises = Object.values(ga_promises);
        Promise.all(promises).then(function(values) {
            callback();
        });
    },
    begin_checkout_with_product: function(product, quantity, callback) {
        var promises = [],
            beacon = [{
                id: product.current_variant.id,
                quantity: quantity,
                amount: product.current_variant.price / 100 * quantity
            }],
            getNewPromise = function(timeout, key) {
                return new Promise(function(resolve, reject) {
                    setTimeout(resolve, timeout, key);
                });
            },
            fb_payload
        ;

        this.log('so.begin_checkout_with_product', {beacon: beacon});

        this.send_beacon('begin_checkout', beacon);

        if (product.metafields.ga_account_id) {
            this.log('so.begin_checkout_with_product.send_google', {ga_account_id: product.metafields.ga_account_id});
            var ga_promise = getNewPromise(1000, product.metafields.ga_account_id), ga_payload;
            promises.push(ga_promise);

            ga_payload = shineon.analytics.ga.send_event.begin_checkout({
                'ga_account_id': product.metafields.ga_account_id,
                'product': product,
                'quantity': quantity,
                'callback': ga_promise
            });
        }

        var fb_pixel_id = product.metafields.fb_pixel_id || null;

        this.log('so.begin_checkout_with_product.send_facebook', {
            fb_pixel_id: fb_pixel_id
        });

        if(fb_pixel_id) {
            fb_payload = shineon.analytics.fb.send_event.initiate_checkout({
                'fb_pixel_id' : fb_pixel_id,
                'product': product,
                'quantity': quantity
            });
        }

        Promise.all(promises).then(function(values) {
            callback();
        });
    },
    checkout: function(checkout, line_items) {
        var item, variant,
            items_grouped_by_ga = {}, items_grouped_by_fb = {},
            beacon = [];

        for (var key in line_items) {
            item = line_items[key];
            variant = item.variant;

            if (typeof variant === 'undefined') {
                continue;
            }

            beacon.push({
                id: variant.id,
                quantity: item.quantity,
                amount: item.price / 100 * item.quantity
            });

            if (variant.metafields) {
                if (variant.metafields.ga_account_id) {
                    this.log('so.checkout.variant.send_google',{
                        ga_account_id: variant.metafields.ga_account_id
                    });
                    if (!items_grouped_by_ga[variant.metafields.ga_account_id]) {
                        items_grouped_by_ga[variant.metafields.ga_account_id] = [];
                    }
                    items_grouped_by_ga[variant.metafields.ga_account_id].push(item);
                }

                if (variant.metafields.fb_pixel_id) {
                    this.log('so.checkout.variant.send_facebook',{
                        fb_pixel_id: variant.metafields.fb_pixel_id
                    });
                    shineon.analytics.fb.send_event.init_pixel(variant.metafields.fb_pixel_id);
                    if (!items_grouped_by_fb[variant.metafields.fb_pixel_id]) {
                        items_grouped_by_fb[variant.metafields.fb_pixel_id] = [];
                    }
                    this.log('so.add-item-fb-group', {
                        pixel: variant.metafields.fb_pixel_id,
                        item: item
                    });
                    items_grouped_by_fb[variant.metafields.fb_pixel_id].push(item);
                }
            }
        }
        if (checkout.step === 'thank_you') {
            this.log('so.checkout.step.thank_you');
            this.send_beacon('purchase', beacon, {
                store_order_id: Shopify.checkout.order_id,
                geolocatedAddress: Shopify.Checkout.geolocatedAddress
            });
        }
        var ga_event_name = checkout.step === 'thank_you'
            ? 'purchase' : 'checkout_step';
        for (var ga_account_id in items_grouped_by_ga) {
            shineon.analytics.ga.send_event[ga_event_name]({
                ga_account_id: ga_account_id,
                checkout: checkout,
                line_items: items_grouped_by_ga[ga_account_id]
            });
        }
        var fb_event_name = checkout.step === 'thank_you'
            ? 'purchase' : checkout.step === 'processing'
                ? 'add_payment_info' : '';
        if(fb_event_name) {
            for (var fb_pixel_id in items_grouped_by_fb) {
                shineon.analytics.fb.send_event[fb_event_name]({
                    fb_pixel_id: fb_pixel_id,
                    checkout: checkout,
                    line_items: items_grouped_by_fb[fb_pixel_id]
                });
            }
        }
    }
};

window.shineon.analytics.ga = window.shineon.analytics.ga || (function() {
    var self = {
        event_label: '{{ shop_domain }}',
        setAccountId: function (account_id) {
            if (!account_id) {
                console.error('missing ga_account_id');
                return;
            }
            this.gtag('js', new Date());
            this.gtag('config', account_id, {
                'currency': '{{ cart.currency.iso_code }}',
                'cookie_domain': '{{ shop_domain }}'
            });

            return this;
        },
        getCategoryValue: function (metafields) {
            return metafields == null || Object.keys(metafields)[0] == null
                ? ''
                : [
                    metafields.shape || 'undefined',
                    metafields.type || 'undefined',
                    metafields.metal || 'undefined',
                    metafields.engravable == null
                        ? 'undefined'
                        : parseInt(metafields.engravable) === 1 ? 'engraved' : 'not-engraved',
                    metafields.is_buyer_upload ? 'bu' : 'non-bu',
                    '{{ template.suffix }}'
                ].join(' | ')
        },
        convert_line_item: function (item, quantity, category_or_metafields) {
            var category = !category_or_metafields
                ? 'Jewelry'
                : (typeof category_or_metafields == 'string'
                    ? category_or_metafields
                    : this.getCategoryValue(category_or_metafields));

            return {
                'id': item.product_id,
                'name': item.product_title,
                'category': category,
                'brand': item.vendor,
                'variant': item.sku,
                'quantity': quantity || item.quantity,
                'price': item.price / 100 + ''
            };
        },
        gtag: function () {
            {% if shop.metafields.shineon.is_shineon_brand == true and shop.metafields.shineon.is_shineon_brand != blank %}
                try
                {
                    so_dataLayer.push(arguments);
                }
                catch(e)
                {
                    console.log('gtag func | so_dataLayer', e);
                }
            {% endif %}
        },
        send_event: function(ga_account_id, event_name, event_value) {
            if (ga_account_id) {
                self.setAccountId(ga_account_id);
            }

            {% if shop.metafields.shineon.is_shineon_brand == true and shop.metafields.shineon.is_shineon_brand != blank %}
            if (ga_account_id) {
                self.gtag('event', event_name, event_value);
            }
            {% endif %}

            if (shineon.analytics.debug) {
                console.log('sending ga event: #' + ga_account_id + ' ' + event_name + ' value: ' + JSON.stringify(event_value));
            }
        }
    };

    return {
        send_event: {
            view_item: function (data) {
                var product = data.product,
                    variant = data.variant || data.product.current_variant,
                    category = data.category || self.getCategoryValue(data.product.current_variant.metafields),
                    currency = '{{ shop.currency }}';

                self.send_event(data.ga_account_id, 'view_item', {
                    items: [{
                        item_id: variant.sku,
                        item_name: variant.name,
                        currency: currency,
                        item_brand: product.vendor,
                        item_category: category,
                        item_variant: variant.title,
                        price: variant.price / 100,
                        quantity: 1
                    }],
                });
            },
            add_to_cart: function (data) {
                var items,
                    callback = data.callback;

                if (data.cart_item && data.quantity) {
                    items = self.convert_line_item(data.cart_item, data.quantity, data.category);
                } else if (data.product) {
                    items = [{
                        'id': data.product.id,
                        'name': data.product.title,
                        'category': data.category || self.getCategoryValue(data.product.current_variant.metafields),
                        'brand': data.product.vendor,
                        'variant': data.product.current_variant.sku,
                        'quantity': data.quantity,
                        'price': data.product.current_variant.price / 100 + ''
                    }];
                } else if (data.items) {
                    items = data.items;
                } else {
                    console.error('[so:ga:add-to-cart] data structure not expected.', data);
                    return;
                }

                self.send_event(data.ga_account_id, 'add_to_cart', {
                    'event_label': self.event_label,
                    'items': items,
                    'event_callback': callback
                });
            },
            remove_from_cart: function (data) {
                self.send_event(data.ga_account_id, 'remove_from_cart', {
                    'event_label': self.event_label,
                    'items': [
                        self.convert_line_item(data.cart_item, data.quantity)
                    ],
                    'event_callback': data.callback
                });
            },
            begin_checkout: function (data) {
                var items, payload;

                if (data.cart) {
                    items = $.map(data.cart.items, function (item) {
                        return self.convert_line_item(item);
                    });
                } else if (data.product && data.quantity) {
                    items = [{
                            'id': data.product.id,
                            'name': data.product.title,
                            'category': data.category || self.getCategoryValue(data.product.current_variant.metafields),
                            'brand': data.product.vendor,
                            'variant': data.product.current_variant.sku,
                            'quantity': data.quantity,
                            'price': data.product.current_variant.price / 100 + ''
                    }];
                } else {
                    console.error('[so:ga:begin-checkout] data structure not expected.', data);
                    return;
                }

                payload = {
                    'event_label': self.event_label,
                    'items': items,
                    'event_callback': data.callback || null
                };

                self.send_event(data.ga_account_id, 'begin_checkout', payload);

                return payload;
            },
            checkout_step: function(data) {
                var products = data.line_items.map(function (item) {
                    return self.convert_line_item(item);
                });
                self.send_event(data.ga_account_id, 'checkout', {
                    'event_label': self.event_label,
                    'actionField': {'step': data.checkout.step},
                    'products': products
                });
            },
            purchase: function (data) {
                var checkout = data.checkout,
                    line_items = data.line_items,
                    products = [],
                    actionField = {
                        id: checkout.transaction_id,
                        revenue: 0
                    };
                for (var i = 0; i < line_items.length; i++) {
                    products.push(self.convert_line_item(line_items[i]));
                    actionField.revenue += line_items[i].price / 100 * line_items[i].quantity;
                }
                self.send_event(data.ga_account_id, 'purchase', {
                    transaction_id: actionField.id,
                    value: actionField.revenue,
                    items: products,
                });
            }
        }
    };
})();

{% if product.metafields.shineon.fb_pixel_id %}
!function(f,b,e,v,n,t,s) {if(f.fbq)return;n=f.fbq=function(){n.callMethod? n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window, document,'script', 'https://connect.facebook.net/en_US/fbevents.js');
{% endif %}

window.shineon.analytics.fb = window.shineon.analytics.fb || (function() {
    var self = {
        pixels: [],
        pixel_fires: {
            page_view: false,
            view_content: false,
            initiate_checkout: false,
            purchase: false
        },
        convert_line_items: function(line_items) {
            var ret = {
                content_ids: [],
                contents: []
            };

            for(var i = 0; i < line_items.length; i++) {
                ret.content_ids.push(line_items[i].product_id);
                ret.contents.push({
                    id: line_items[i].product_id,
                    quantity: line_items[i].quantity
                })
            }
            shineon.analytics.log('fb.convert_line_items', ret);
            return ret;
        },
        convert_checkout: function(checkout, line_items) {
            var converted = self.convert_line_items(line_items);
            converted.value = 0;

            for (var i = 0; i < line_items.length; i++) {
                converted.value += line_items[i].price / 100;
            }
            shineon.analytics.log('fb.convert_checkout', converted);
            return converted;
        },
        event: {
            currency: '{{ cart.currency.iso_code }}',
            init: function(fb_pixel_id) {
                shineon.analytics.log('fb.event.init', {fb_pixel_id: fb_pixel_id});

                if (!fb_pixel_id) {
                    return;
                }
                if (self.pixels.indexOf(fb_pixel_id) === -1) {
                    fbq('init', fb_pixel_id);
                    self.pixels.push(fb_pixel_id);
                }
            },
            send: function(event_name, event_value, custom_event) {
                shineon.analytics.log('fb.event.send',{
                    event_name: event_name,
                    event_value: event_value,
                    custom_event: custom_event
                });
                custom_event
                    ? fbq('trackCustom', event_name, event_value)
                    : fbq('track', event_name, event_value);
            },
            sendSingle: function(fb_pixel_id, event_name, event_value, custom_event) {
                shineon.analytics.log('fb.event.sendSingle',{
                    fb_pixel_id : fb_pixel_id,
                    event_name : event_name,
                    event_value : event_value,
                    custom_event : custom_event
                })

                self.event.init(fb_pixel_id);
                custom_event
                    ? fbq('trackSingleCustom', fb_pixel_id, event_name, event_value)
                    : fbq('trackSingle', fb_pixel_id, event_name, event_value);
            }
        }
    };

    return {
        send_event: {
            init_pixel: function(fb_pixel_id) {
                shineon.analytics.log('fb.send_event.init_pixel',{fb_pixel_id:fb_pixel_id});
                self.event.init(fb_pixel_id);
            },
            page_view: function(fb_pixel_id) {
                if(!self.pixel_fires.page_view) {
                    self.pixel_fires.page_view = true;
                    self.event.sendSingle(fb_pixel_id, 'PageView');
                }
            },
            view_content: function(data) {
                if(!self.pixel_fires.view_content) {
                    self.pixel_fires.view_content = true;
                    shineon.analytics.log('fb.send_event.view_content');
                    if (data.product && data.fb_pixel_id) {
                        self.event.sendSingle(data.fb_pixel_id, 'ViewContent', {
                            content_ids: [data.product.id],
                            content_name: data.product.current_variant.title,
                            content_type: 'product',
                            contents: [{
                                id: data.product.id,
                                quantity: data.quantity || 1
                            }],
                            currency: self.event.currency,
                            value: data.product.current_variant.price / 100
                        });
                    } else {
                        console.error('[so:fb:view-content] data structure not expected.', data);
                    }
                }
            },
            add_to_cart: function(data) {
                if (data.product && data.quantity && data.fb_pixel_id) {
                    fb_atc_payload = {
                        content_ids: [data.product.id],
                        content_name: data.product.current_variant.title,
                        content_type: 'product',
                        contents: [{
                            id: data.product.id,
                            quantity: data.quantity
                        }],
                        currency: self.event.currency,
                        value: data.product.current_variant.price / 100
                    }
                    shineon.analytics.log('fb.send_event.add_to_cart',fb_atc_payload);
                    self.event.sendSingle(data.fb_pixel_id, 'AddToCart', fb_atc_payload);
                } else {
                    console.error('[so:fb:add-to-cart] data structure not expected.', data);
                    console.dir(data);
                }
            },
            remove_from_cart: function(data) {
                var fb_rfc_payload;
                if (data.product && data.quantity && data.fb_pixel_id) {
                    fb_rfc_payload = {
                        content_ids: [data.product.id],
                        content_name: data.product.current_variant.title,
                        content_type: 'product',
                        contents: [{
                            id: data.product.id,
                            quantity: data.quantity
                        }],
                        currency: self.event.currency,
                        value: data.product.current_variant.price / 100
                    }
                    self.event.sendSingle(data.fb_pixel_id, 'RemoveFromCart', fb_rfc_payload, true);
                } else if (data.cart_item && data.fb_pixel_id) {
                    fb_rfc_payload = {
                        content_ids: [data.cart_item.product_id],
                        content_name: data.variant.title,
                        content_type: 'product',
                        contents: [{
                            id: data.cart_item.product_id,
                            quantity: data.cart_item.quantity
                        }],
                        currency: self.event.currency,
                        value: data.variant.price / 100
                    }
                    self.event.sendSingle(data.fb_pixel_id,'RemoveFromCart', fb_rfc_payload, true);
                } else {
                    fb_rfc_payload = "Invalid Object Structure";
                    console.error('[so:fb:remove-from-cart] data structure not expected.', data);
                }
                shineon.analytics.log('fb.send_event.remove_from_cart', fb_rfc_payload);
            },
            initiate_checkout: function(data) {
                if(!self.pixel_fires.initiate_checkout) {
                    self.pixel_fires.initiate_checkout = true;
                    var payload;
                    // content_category, content_ids, contents, currency, num_items, value
                    if (data.cart && data.cart.items) {
                        var converted_cart = self.convert_line_items(data.cart.items);
                        payload = {
                            content_ids: converted_cart.content_ids,
                            content_type: 'product',
                            contents: converted_cart.contents,
                            currency: data.cart.currency.iso_code || self.event.currency,
                            num_items: converted_cart.content_ids.length,
                            value: data.cart.total_price / 100
                        };
                    } else if (data.product && data.quantity) {
                        payload = {
                            content_ids: [data.product.id],
                            contents: [{
                                id: data.product.id,
                                quantity: data.quantity || 1
                            }],
                            content_type: 'product',
                            currency: self.event.currency,
                            num_items: 1,
                            value: data.product.price / 100
                        };
                    } else {
                        console.error('[so:fb:initiate-checkout] data structure not expected.', data);
                        return null;
                    }
                    self.event.sendSingle(data.fb_pixel_id, 'InitiateCheckout', payload);

                    return payload;
                }
            },
            add_payment_info: function(data) {
                return;
                // var checkout = data.checkout,
                //     line_items = data.line_items,
                //     converted_checkout = self.convert_checkout(checkout, line_items);
                //
                // self.event.send(data.fb_pixel_id, 'AddPaymentInfo', {
                //     content_ids: converted_checkout.content_ids,
                //     contents: converted_checkout.contents,
                //     currency: checkout.currency.iso_code || self.event.currency,
                //     num_items: converted_checkout.content_ids.length,
                //     value: converted_checkout.value
                // });
            },
            purchase: function(data) {
                if(!self.pixel_fires.purchase) {
                    self.pixel_fires.purchase = true;
                    var checkout = data.checkout,
                        line_items = data.line_items,
                        converted_checkout = self.convert_checkout(checkout, line_items),
                        payload
                    ;
                    payload = {
                        content_ids: converted_checkout.content_ids,
                        contents: converted_checkout.contents,
                        content_type: 'product',
                        currency: checkout.currency.iso_code || self.event.currency,
                        num_items: converted_checkout.content_ids.length,
                        value: converted_checkout.value
                    }
                    shineon.analytics.log('fb.send_event.purchase', payload);
                    self.event.sendSingle(data.fb_pixel_id, 'Purchase', payload,true);
                }
            }
        }
    }
})();


{% if shop.metafields.shineon.is_shineon_brand != true %}
    {% if template contains 'product' %}
        var so_product = {{ product | json}};
        so_product.current_variant = {{ product.selected_or_first_available_variant | json }};
        so_product.metafields = {{ product.metafields.shineon | json }};
        shineon.analytics.product_view(so_product);
    {% endif %}
{% endif %}
</script>
{% endunless %}

{% when 'analytics-events-form-submit-listeners' %}
// Platform FB Pixel
if (product.metafields.fb_pixel_id) {

    var def_fb_analytics_atc_pf = new $.Deferred();
    formSubmitDefs.push(def_fb_analytics_atc_pf.promise());

    $form.one('submit.fb_analytics_atc_pf', function (evt) {
        var resolveFbDeffered = function () {
            if (def_fb_analytics_atc_pf.state() === 'pending') {
                def_fb_analytics_atc_pf.resolve({def_fb_analytics_atc_pf: true});
            }
        };

        setTimeout(resolveFbDeffered, 500);

        shineon.analytics.fb.send_event.add_to_cart({
            'fb_pixel_id': product.metafields.fb_pixel_id,
            'product': product,
            'quantity': $form.find('input[name=quantity]').val(),
            'callback': resolveFbDeffered
        });

        return false;
    });

    if ($form.data('express_checkout') === true) {
        // Send begin checkout GA event
        var def_fb_analytics_begin_checkout_pf = new $.Deferred();
        formSubmitDefs.push(def_fb_analytics_begin_checkout_pf.promise());

        $form.one('submit.fb_analytics_checkout_pf', function () {
            var resolveFbDeffered = function () {
                if (def_fb_analytics_begin_checkout_pf.state() === 'pending') {
                    def_fb_analytics_begin_checkout_pf.resolve({def_fb_analytics_begin_checkout_pf: true});
                }
            };

            setTimeout(resolveFbDeffered, 500);

            shineon.analytics.fb.send_event.initiate_checkout({
                'fb_pixel_id': product.metafields.fb_pixel_id,
                'product': product,
                'quantity': $form.find('input[name=quantity]').val(),
                'callback': resolveFbDeffered
            });

            return false;
        });
    }
}

// Platform Google Analytics
if (product.metafields.ga_account_id) {
    var def_ga_analytics_atc_pf = new $.Deferred();
    formSubmitDefs.push(def_ga_analytics_atc_pf.promise());

    $form.one('submit.ga_analytics_atc_pf', function (evt) {
        var resolveGaDeffered = function () {
            if (def_ga_analytics_atc_pf.state() === 'pending') {
                def_ga_analytics_atc_pf.resolve({def_ga_analytics_atc_pf: true});
            }
        };

        setTimeout(resolveGaDeffered, 500);

        shineon.analytics.ga.send_event.add_to_cart({
            'ga_account_id': product.metafields.ga_account_id,
            'product': product,
            'category': 'Jewelry',
            'quantity': $form.find('input[name=quantity]').val(),
            'callback': resolveGaDeffered
        });

        return false;
    });

    if ($form.data('express_checkout') === true) {
        // Send begin checkout GA event
        var def_ga_analytics_begin_checkout_pf = new $.Deferred();
        formSubmitDefs.push(def_ga_analytics_begin_checkout_pf.promise());

        $form.one('submit.ga_analytics_checkout_pf', function () {
            var resolveGaDeffered = function () {
                if (def_ga_analytics_begin_checkout_pf.state() === 'pending') {
                    def_ga_analytics_begin_checkout_pf.resolve({def_ga_analytics_begin_checkout_pf: true});
                }
            };

            setTimeout(resolveGaDeffered, 500);

            shineon.analytics.ga.send_event.begin_checkout({
                'ga_account_id': product.metafields.ga_account_id,
                'product': product,
                'category': 'Jewelry',
                'quantity': $form.find('input[name=quantity]').val(),
                'callback': resolveGaDeffered
            });

            return false;
        });
    }
}

// App Google Analytics
if ($form.data('google_analytics_id').trim().length || window.gtm_id) {
    var def_ga_analytics_atc = new $.Deferred();
    formSubmitDefs.push(def_ga_analytics_atc.promise());

    $form.one('submit.ga_analytics_atc', function (evt) {
        var quantity = $form.find('input[name=quantity]').val(),
            resolveGaDeffered = function(){
                if (def_ga_analytics_atc.state() === 'pending') {
                    def_ga_analytics_atc.resolve({def_ga_analytics_atc: true});
                }
            };

        setTimeout(resolveGaDeffered, 500);

        shineon.analytics.ga.send_event.add_to_cart({
            'ga_account_id': '{{ shop.metafields.shineon.google_analytics_id }}',
            'product': product,
            'quantity': quantity,
            'callback': resolveGaDeffered
        });

        return false;
    });

    if ($form.data('express_checkout') === true) {
        // Send begin checkout GA event
        var def_ga_analytics_begin_checkout = new $.Deferred();
        formSubmitDefs.push(def_ga_analytics_begin_checkout.promise());

        $form.one('submit.ga_analytics_checkout', function () {
            var resolveGaDeffered = function () {
                if (def_ga_analytics_begin_checkout.state() === 'pending') {
                    def_ga_analytics_begin_checkout.resolve({def_ga_analytics_begin_checkout: true});
                }
            };

            setTimeout(resolveGaDeffered, 500);

            shineon.analytics.ga.send_event.begin_checkout({
                'ga_account_id': '{{ shop.metafields.shineon.google_analytics_id }}',
                'product': product,
                'quantity': $form.find('input[name=quantity]').val(),
                'callback': resolveGaDeffered
            });

            return false;
        });
    }
}

// Seller Facebook Pixel
// Send PIXEL for buyer upload products and if store is not using trackify app
var shouldSubmitFBPixel = typeof window.fbq === 'function'
    && $form.data('uploadable') === 1
    && ! (window.tkfy && window.tkfy.config && window.tkfy.config.enabled); //trackify app
if (shouldSubmitFBPixel) {
    $form.off('submit.fb_pixel').one('submit.fb_pixel', function () {
            var def_fb_pixel = new $.Deferred();
            formSubmitDefs.push(def_fb_pixel.promise());

            fbq('track', 'AddToCart', {
                content_type: 'product_group',
                content_ids: '[{{ product.id }}]',
                value: product.current_variant.price / 100 + '',
                num_items: parseInt($form.find('input[name=quantity]').val()),
                content_name: product.current_variant.title,
                currency: '{{ cart.currency.iso_code }}'
            });

            setTimeout(function () {
                def_fb_pixel.resolve({def_fb_pixel: true});
            }, 1500)
    });
}

// Beacon
$form.off('submit.beacon_add_to_cart').one('submit.beacon_add_to_cart', function () {
    var quantity = parseInt($form.find('input[name=quantity]').val()),
        variants = [{
            id: product.current_variant.id,
            quantity: quantity,
            amount: product.current_variant.price / 100 * quantity
        }];

    shineon.analytics.send_beacon('add_to_cart', variants);

    if ($form.data('express_checkout') === true) {
        shineon.analytics.send_beacon('begin_checkout', variants);
    }
});

    {% when 'buyer-upload-styles' %}
        <style type="text/css">
            @media(max-width: 767px) {
                body.so-step-1 {
                    padding-bottom: 45px;
                }
                body.so-step-2 {
                    padding-bottom: 80px;
                }
            }
        </style>

{% endcase %}
